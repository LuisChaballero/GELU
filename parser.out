Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     vacio -> <empty>
Rule 2     programa -> PROGRAM ID PUNTO_COMA clases decVar funciones main
Rule 3     main -> MAIN PARENTESIS_I PARENTESIS_D bloque
Rule 4     bloque -> LLAVE_I estatutos LLAVE_D
Rule 5     estatutos -> estatuto estatutos
Rule 6     estatutos -> vacio
Rule 7     clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl
Rule 8     clases -> vacio
Rule 9     heren -> MENOR_QUE INHERITS MAYOR_QUE
Rule 10    heren -> vacio
Rule 11    contenido -> attr met
Rule 12    attr -> decVar
Rule 13    attr -> vacio
Rule 14    met -> funciones
Rule 15    met -> vacio
Rule 16    nuevacl -> clases
Rule 17    nuevacl -> vacio
Rule 18    decVar -> VAR tipo PUNTO_COMA e
Rule 19    decVar -> vacio
Rule 20    tipo -> tiposimple a b
Rule 21    tipo -> tipoCompuesto c d
Rule 22    a -> ID
Rule 23    a -> ID CORCHETE_I CTEINT CORCHETE_D
Rule 24    a -> ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D
Rule 25    b -> COMA a b
Rule 26    b -> vacio
Rule 27    c -> ID
Rule 28    d -> COMA c d
Rule 29    d -> vacio
Rule 30    e -> decVar
Rule 31    e -> vacio
Rule 32    tiposimple -> INT
Rule 33    tiposimple -> FLOAT
Rule 34    tiposimple -> CHAR
Rule 35    tipoCompuesto -> ID
Rule 36    tipoCompuesto -> DATAFRAME
Rule 37    tipoCompuesto -> FILE
Rule 38    funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
Rule 39    funciones -> vacio
Rule 40    f -> tiposimple
Rule 41    f -> VOID
Rule 42    z -> funciones
Rule 43    z -> vacio
Rule 44    param -> tiposimple ID g
Rule 45    param -> vacio
Rule 46    g -> COMA param
Rule 47    g -> vacio
Rule 48    estatuto -> asignacion
Rule 49    estatuto -> llamadaVoid
Rule 50    estatuto -> retorno
Rule 51    estatuto -> lectura
Rule 52    estatuto -> escritura
Rule 53    estatuto -> condicion
Rule 54    estatuto -> cicloWhile
Rule 55    estatuto -> cicloFor
Rule 56    variable -> ID h
Rule 57    h -> CORCHETE_I expresion CORCHETE_D
Rule 58    h -> CORCHETE_I expresion COMA expresion CORCHETE_D
Rule 59    h -> vacio
Rule 60    asignacion -> variable IGUAL expresion PUNTO_COMA
Rule 61    llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D
Rule 62    I -> COMA expresion I
Rule 63    I -> vacio
Rule 64    lectura -> READ variable
Rule 65    retorno -> RETURN expresion PUNTO_COMA
Rule 66    escritura -> PRINT PARENTESIS_I j
Rule 67    j -> CTESTRING k
Rule 68    j -> expresion k
Rule 69    k -> COMA j
Rule 70    k -> PARENTESIS_D PUNTO_COMA
Rule 71    condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l
Rule 72    l -> ELSE bloque
Rule 73    l -> vacio
Rule 74    cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque
Rule 75    cicloFor -> FOR variable IGUAL expresion UNTIL bloque
Rule 76    expresion -> exp m
Rule 77    m -> MAYOR_QUE exp
Rule 78    m -> MENOR_QUE exp
Rule 79    m -> NO_IGUAL exp
Rule 80    m -> vacio
Rule 81    exp -> termino n
Rule 82    n -> MAS exp
Rule 83    n -> MENOS exp
Rule 84    n -> vacio
Rule 85    termino -> factor o
Rule 86    o -> POR termino
Rule 87    o -> ENTRE termino
Rule 88    o -> vacio
Rule 89    factor -> varcte
Rule 90    factor -> ID p
Rule 91    factor -> PARENTESIS_I expresion PARENTESIS_D
Rule 92    factor -> MAS varcte
Rule 93    factor -> MENOS varcte
Rule 94    p -> CORCHETE_I expresion CORCHETE_D
Rule 95    p -> CORCHETE_I expresion COMA expresion CORCHETE_D
Rule 96    p -> PARENTESIS_I expresion q PARENTESIS_D
Rule 97    p -> PUNTO ID
Rule 98    p -> PUNTO ID PARENTESIS_I r PARENTESIS_D
Rule 99    p -> vacio
Rule 100   q -> COMA expresion q
Rule 101   q -> vacio
Rule 102   r -> varcte s
Rule 103   r -> vacio
Rule 104   s -> COMA varcte s
Rule 105   s -> vacio
Rule 106   varcte -> CTECHAR
Rule 107   varcte -> CTEINT
Rule 108   varcte -> CTEFLOAT

Terminals, with rules where they appear

CHAR                 : 34
CLASS                : 7
COMA                 : 24 25 28 46 58 62 69 95 100 104
CORCHETE_D           : 23 24 57 58 94 95
CORCHETE_I           : 23 24 57 58 94 95
CTECHAR              : 106
CTEFLOAT             : 108
CTEINT               : 23 24 24 107
CTESTRING            : 67
DATAFRAME            : 36
ELSE                 : 72
ENTRE                : 87
FILE                 : 37
FLOAT                : 33
FOR                  : 75
FUNC                 : 38
ID                   : 2 7 22 23 24 27 35 38 44 56 61 90 97 98
IF                   : 71
IGUAL                : 60 75
INHERITS             : 9
INT                  : 32
LLAVE_D              : 4 7 38
LLAVE_I              : 4 7 38
MAIN                 : 3
MAS                  : 82 92
MAYOR_QUE            : 9 77
MENOR_QUE            : 9 78
MENOS                : 83 93
NO_IGUAL             : 79
PARENTESIS_D         : 3 38 61 70 71 74 91 96 98
PARENTESIS_I         : 3 38 61 66 71 74 91 96 98
POR                  : 86
PRINT                : 66
PROGRAM              : 2
PUNTO                : 97 98
PUNTO_COMA           : 2 7 18 60 65 70
READ                 : 64
RETURN               : 65
UNTIL                : 75
VAR                  : 18
VOID                 : 41
WHILE                : 74
error                : 

Nonterminals, with rules where they appear

I                    : 61 62
a                    : 20 25
asignacion           : 48
attr                 : 11
b                    : 20 25
bloque               : 3 71 72 74 75
c                    : 21 28
cicloFor             : 55
cicloWhile           : 54
clases               : 2 16
condicion            : 53
contenido            : 7
d                    : 21 28
decVar               : 2 12 30 38
e                    : 18
escritura            : 52
estatuto             : 5
estatutos            : 4 5 38
exp                  : 76 77 78 79 82 83
expresion            : 57 58 58 60 61 62 65 68 71 74 75 91 94 95 95 96 100
f                    : 38
factor               : 85
funciones            : 2 14 42
g                    : 44
h                    : 56
heren                : 7
j                    : 66 69
k                    : 67 68
l                    : 71
lectura              : 51
llamadaVoid          : 49
m                    : 76
main                 : 2
met                  : 11
n                    : 81
nuevacl              : 7
o                    : 85
p                    : 90
param                : 38 46
programa             : 0
q                    : 96 100
r                    : 98
retorno              : 50
s                    : 102 104
termino              : 81 86 87
tipo                 : 18
tipoCompuesto        : 21
tiposimple           : 20 40 44
vacio                : 6 8 10 13 15 17 19 26 29 31 39 43 45 47 59 63 73 80 84 88 99 101 103 105
varcte               : 89 92 93 102 104
variable             : 60 64 75
z                    : 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (2) programa -> . PROGRAM ID PUNTO_COMA clases decVar funciones main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> PROGRAM . ID PUNTO_COMA clases decVar funciones main

    ID              shift and go to state 3


state 3

    (2) programa -> PROGRAM ID . PUNTO_COMA clases decVar funciones main

    PUNTO_COMA      shift and go to state 4


state 4

    (2) programa -> PROGRAM ID PUNTO_COMA . clases decVar funciones main
    (7) clases -> . CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl
    (8) clases -> . vacio
    (1) vacio -> .

    CLASS           shift and go to state 6
    VAR             reduce using rule 1 (vacio -> .)
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    clases                         shift and go to state 5
    vacio                          shift and go to state 7

state 5

    (2) programa -> PROGRAM ID PUNTO_COMA clases . decVar funciones main
    (18) decVar -> . VAR tipo PUNTO_COMA e
    (19) decVar -> . vacio
    (1) vacio -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    decVar                         shift and go to state 8
    vacio                          shift and go to state 10

state 6

    (7) clases -> CLASS . ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl

    ID              shift and go to state 11


state 7

    (8) clases -> vacio .

    VAR             reduce using rule 8 (clases -> vacio .)
    FUNC            reduce using rule 8 (clases -> vacio .)
    MAIN            reduce using rule 8 (clases -> vacio .)


state 8

    (2) programa -> PROGRAM ID PUNTO_COMA clases decVar . funciones main
    (38) funciones -> . FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
    (39) funciones -> . vacio
    (1) vacio -> .

    FUNC            shift and go to state 13
    MAIN            reduce using rule 1 (vacio -> .)

    funciones                      shift and go to state 12
    vacio                          shift and go to state 14

state 9

    (18) decVar -> VAR . tipo PUNTO_COMA e
    (20) tipo -> . tiposimple a b
    (21) tipo -> . tipoCompuesto c d
    (32) tiposimple -> . INT
    (33) tiposimple -> . FLOAT
    (34) tiposimple -> . CHAR
    (35) tipoCompuesto -> . ID
    (36) tipoCompuesto -> . DATAFRAME
    (37) tipoCompuesto -> . FILE

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    ID              shift and go to state 21
    DATAFRAME       shift and go to state 22
    FILE            shift and go to state 23

    tipo                           shift and go to state 15
    tiposimple                     shift and go to state 16
    tipoCompuesto                  shift and go to state 17

state 10

    (19) decVar -> vacio .

    FUNC            reduce using rule 19 (decVar -> vacio .)
    MAIN            reduce using rule 19 (decVar -> vacio .)
    ID              reduce using rule 19 (decVar -> vacio .)
    RETURN          reduce using rule 19 (decVar -> vacio .)
    READ            reduce using rule 19 (decVar -> vacio .)
    PRINT           reduce using rule 19 (decVar -> vacio .)
    IF              reduce using rule 19 (decVar -> vacio .)
    WHILE           reduce using rule 19 (decVar -> vacio .)
    FOR             reduce using rule 19 (decVar -> vacio .)
    LLAVE_D         reduce using rule 19 (decVar -> vacio .)


state 11

    (7) clases -> CLASS ID . heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl
    (9) heren -> . MENOR_QUE INHERITS MAYOR_QUE
    (10) heren -> . vacio
    (1) vacio -> .

    MENOR_QUE       shift and go to state 25
    LLAVE_I         reduce using rule 1 (vacio -> .)

    heren                          shift and go to state 24
    vacio                          shift and go to state 26

state 12

    (2) programa -> PROGRAM ID PUNTO_COMA clases decVar funciones . main
    (3) main -> . MAIN PARENTESIS_I PARENTESIS_D bloque

    MAIN            shift and go to state 28

    main                           shift and go to state 27

state 13

    (38) funciones -> FUNC . f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
    (40) f -> . tiposimple
    (41) f -> . VOID
    (32) tiposimple -> . INT
    (33) tiposimple -> . FLOAT
    (34) tiposimple -> . CHAR

    VOID            shift and go to state 31
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    f                              shift and go to state 29
    tiposimple                     shift and go to state 30

state 14

    (39) funciones -> vacio .

    MAIN            reduce using rule 39 (funciones -> vacio .)


state 15

    (18) decVar -> VAR tipo . PUNTO_COMA e

    PUNTO_COMA      shift and go to state 32


state 16

    (20) tipo -> tiposimple . a b
    (22) a -> . ID
    (23) a -> . ID CORCHETE_I CTEINT CORCHETE_D
    (24) a -> . ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D

    ID              shift and go to state 34

    a                              shift and go to state 33

state 17

    (21) tipo -> tipoCompuesto . c d
    (27) c -> . ID

    ID              shift and go to state 36

    c                              shift and go to state 35

state 18

    (32) tiposimple -> INT .

    ID              reduce using rule 32 (tiposimple -> INT .)


state 19

    (33) tiposimple -> FLOAT .

    ID              reduce using rule 33 (tiposimple -> FLOAT .)


state 20

    (34) tiposimple -> CHAR .

    ID              reduce using rule 34 (tiposimple -> CHAR .)


state 21

    (35) tipoCompuesto -> ID .

    ID              reduce using rule 35 (tipoCompuesto -> ID .)


state 22

    (36) tipoCompuesto -> DATAFRAME .

    ID              reduce using rule 36 (tipoCompuesto -> DATAFRAME .)


state 23

    (37) tipoCompuesto -> FILE .

    ID              reduce using rule 37 (tipoCompuesto -> FILE .)


state 24

    (7) clases -> CLASS ID heren . LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl

    LLAVE_I         shift and go to state 37


state 25

    (9) heren -> MENOR_QUE . INHERITS MAYOR_QUE

    INHERITS        shift and go to state 38


state 26

    (10) heren -> vacio .

    LLAVE_I         reduce using rule 10 (heren -> vacio .)


state 27

    (2) programa -> PROGRAM ID PUNTO_COMA clases decVar funciones main .

    $end            reduce using rule 2 (programa -> PROGRAM ID PUNTO_COMA clases decVar funciones main .)


state 28

    (3) main -> MAIN . PARENTESIS_I PARENTESIS_D bloque

    PARENTESIS_I    shift and go to state 39


state 29

    (38) funciones -> FUNC f . ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z

    ID              shift and go to state 40


state 30

    (40) f -> tiposimple .

    ID              reduce using rule 40 (f -> tiposimple .)


state 31

    (41) f -> VOID .

    ID              reduce using rule 41 (f -> VOID .)


state 32

    (18) decVar -> VAR tipo PUNTO_COMA . e
    (30) e -> . decVar
    (31) e -> . vacio
    (18) decVar -> . VAR tipo PUNTO_COMA e
    (19) decVar -> . vacio
    (1) vacio -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)

    e                              shift and go to state 41
    decVar                         shift and go to state 42
    vacio                          shift and go to state 43

state 33

    (20) tipo -> tiposimple a . b
    (25) b -> . COMA a b
    (26) b -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 45
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    b                              shift and go to state 44
    vacio                          shift and go to state 46

state 34

    (22) a -> ID .
    (23) a -> ID . CORCHETE_I CTEINT CORCHETE_D
    (24) a -> ID . CORCHETE_I CTEINT COMA CTEINT CORCHETE_D

    COMA            reduce using rule 22 (a -> ID .)
    PUNTO_COMA      reduce using rule 22 (a -> ID .)
    CORCHETE_I      shift and go to state 47


state 35

    (21) tipo -> tipoCompuesto c . d
    (28) d -> . COMA c d
    (29) d -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    d                              shift and go to state 48
    vacio                          shift and go to state 50

state 36

    (27) c -> ID .

    COMA            reduce using rule 27 (c -> ID .)
    PUNTO_COMA      reduce using rule 27 (c -> ID .)


state 37

    (7) clases -> CLASS ID heren LLAVE_I . contenido LLAVE_D PUNTO_COMA nuevacl
    (11) contenido -> . attr met
    (12) attr -> . decVar
    (13) attr -> . vacio
    (18) decVar -> . VAR tipo PUNTO_COMA e
    (19) decVar -> . vacio
    (1) vacio -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    contenido                      shift and go to state 51
    attr                           shift and go to state 52
    decVar                         shift and go to state 53
    vacio                          shift and go to state 54

state 38

    (9) heren -> MENOR_QUE INHERITS . MAYOR_QUE

    MAYOR_QUE       shift and go to state 55


state 39

    (3) main -> MAIN PARENTESIS_I . PARENTESIS_D bloque

    PARENTESIS_D    shift and go to state 56


state 40

    (38) funciones -> FUNC f ID . PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z

    PARENTESIS_I    shift and go to state 57


state 41

    (18) decVar -> VAR tipo PUNTO_COMA e .

    FUNC            reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    MAIN            reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    LLAVE_D         reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    ID              reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    RETURN          reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    READ            reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    PRINT           reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    IF              reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    WHILE           reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)
    FOR             reduce using rule 18 (decVar -> VAR tipo PUNTO_COMA e .)


state 42

    (30) e -> decVar .

    FUNC            reduce using rule 30 (e -> decVar .)
    MAIN            reduce using rule 30 (e -> decVar .)
    LLAVE_D         reduce using rule 30 (e -> decVar .)
    ID              reduce using rule 30 (e -> decVar .)
    RETURN          reduce using rule 30 (e -> decVar .)
    READ            reduce using rule 30 (e -> decVar .)
    PRINT           reduce using rule 30 (e -> decVar .)
    IF              reduce using rule 30 (e -> decVar .)
    WHILE           reduce using rule 30 (e -> decVar .)
    FOR             reduce using rule 30 (e -> decVar .)


state 43

    (31) e -> vacio .
    (19) decVar -> vacio .

  ! reduce/reduce conflict for FUNC resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for MAIN resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for ID resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for IF resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (decVar -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 19 (decVar -> vacio .)
    FUNC            reduce using rule 19 (decVar -> vacio .)
    MAIN            reduce using rule 19 (decVar -> vacio .)
    LLAVE_D         reduce using rule 19 (decVar -> vacio .)
    ID              reduce using rule 19 (decVar -> vacio .)
    RETURN          reduce using rule 19 (decVar -> vacio .)
    READ            reduce using rule 19 (decVar -> vacio .)
    PRINT           reduce using rule 19 (decVar -> vacio .)
    IF              reduce using rule 19 (decVar -> vacio .)
    WHILE           reduce using rule 19 (decVar -> vacio .)
    FOR             reduce using rule 19 (decVar -> vacio .)

  ! FUNC            [ reduce using rule 31 (e -> vacio .) ]
  ! MAIN            [ reduce using rule 31 (e -> vacio .) ]
  ! LLAVE_D         [ reduce using rule 31 (e -> vacio .) ]
  ! ID              [ reduce using rule 31 (e -> vacio .) ]
  ! RETURN          [ reduce using rule 31 (e -> vacio .) ]
  ! READ            [ reduce using rule 31 (e -> vacio .) ]
  ! PRINT           [ reduce using rule 31 (e -> vacio .) ]
  ! IF              [ reduce using rule 31 (e -> vacio .) ]
  ! WHILE           [ reduce using rule 31 (e -> vacio .) ]
  ! FOR             [ reduce using rule 31 (e -> vacio .) ]


state 44

    (20) tipo -> tiposimple a b .

    PUNTO_COMA      reduce using rule 20 (tipo -> tiposimple a b .)


state 45

    (25) b -> COMA . a b
    (22) a -> . ID
    (23) a -> . ID CORCHETE_I CTEINT CORCHETE_D
    (24) a -> . ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D

    ID              shift and go to state 34

    a                              shift and go to state 58

state 46

    (26) b -> vacio .

    PUNTO_COMA      reduce using rule 26 (b -> vacio .)


state 47

    (23) a -> ID CORCHETE_I . CTEINT CORCHETE_D
    (24) a -> ID CORCHETE_I . CTEINT COMA CTEINT CORCHETE_D

    CTEINT          shift and go to state 59


state 48

    (21) tipo -> tipoCompuesto c d .

    PUNTO_COMA      reduce using rule 21 (tipo -> tipoCompuesto c d .)


state 49

    (28) d -> COMA . c d
    (27) c -> . ID

    ID              shift and go to state 36

    c                              shift and go to state 60

state 50

    (29) d -> vacio .

    PUNTO_COMA      reduce using rule 29 (d -> vacio .)


state 51

    (7) clases -> CLASS ID heren LLAVE_I contenido . LLAVE_D PUNTO_COMA nuevacl

    LLAVE_D         shift and go to state 61


state 52

    (11) contenido -> attr . met
    (14) met -> . funciones
    (15) met -> . vacio
    (38) funciones -> . FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
    (39) funciones -> . vacio
    (1) vacio -> .

    FUNC            shift and go to state 13
    LLAVE_D         reduce using rule 1 (vacio -> .)

    met                            shift and go to state 62
    funciones                      shift and go to state 63
    vacio                          shift and go to state 64

state 53

    (12) attr -> decVar .

    FUNC            reduce using rule 12 (attr -> decVar .)
    LLAVE_D         reduce using rule 12 (attr -> decVar .)


state 54

    (13) attr -> vacio .
    (19) decVar -> vacio .

  ! reduce/reduce conflict for FUNC resolved using rule 13 (attr -> vacio .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 13 (attr -> vacio .)
    FUNC            reduce using rule 13 (attr -> vacio .)
    LLAVE_D         reduce using rule 13 (attr -> vacio .)

  ! FUNC            [ reduce using rule 19 (decVar -> vacio .) ]
  ! LLAVE_D         [ reduce using rule 19 (decVar -> vacio .) ]


state 55

    (9) heren -> MENOR_QUE INHERITS MAYOR_QUE .

    LLAVE_I         reduce using rule 9 (heren -> MENOR_QUE INHERITS MAYOR_QUE .)


state 56

    (3) main -> MAIN PARENTESIS_I PARENTESIS_D . bloque
    (4) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 66

    bloque                         shift and go to state 65

state 57

    (38) funciones -> FUNC f ID PARENTESIS_I . param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
    (44) param -> . tiposimple ID g
    (45) param -> . vacio
    (32) tiposimple -> . INT
    (33) tiposimple -> . FLOAT
    (34) tiposimple -> . CHAR
    (1) vacio -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    param                          shift and go to state 67
    tiposimple                     shift and go to state 68
    vacio                          shift and go to state 69

state 58

    (25) b -> COMA a . b
    (25) b -> . COMA a b
    (26) b -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 45
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    b                              shift and go to state 70
    vacio                          shift and go to state 46

state 59

    (23) a -> ID CORCHETE_I CTEINT . CORCHETE_D
    (24) a -> ID CORCHETE_I CTEINT . COMA CTEINT CORCHETE_D

    CORCHETE_D      shift and go to state 71
    COMA            shift and go to state 72


state 60

    (28) d -> COMA c . d
    (28) d -> . COMA c d
    (29) d -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    d                              shift and go to state 73
    vacio                          shift and go to state 50

state 61

    (7) clases -> CLASS ID heren LLAVE_I contenido LLAVE_D . PUNTO_COMA nuevacl

    PUNTO_COMA      shift and go to state 74


state 62

    (11) contenido -> attr met .

    LLAVE_D         reduce using rule 11 (contenido -> attr met .)


state 63

    (14) met -> funciones .

    LLAVE_D         reduce using rule 14 (met -> funciones .)


state 64

    (15) met -> vacio .
    (39) funciones -> vacio .

  ! reduce/reduce conflict for LLAVE_D resolved using rule 15 (met -> vacio .)
    LLAVE_D         reduce using rule 15 (met -> vacio .)

  ! LLAVE_D         [ reduce using rule 39 (funciones -> vacio .) ]


state 65

    (3) main -> MAIN PARENTESIS_I PARENTESIS_D bloque .

    $end            reduce using rule 3 (main -> MAIN PARENTESIS_I PARENTESIS_D bloque .)


state 66

    (4) bloque -> LLAVE_I . estatutos LLAVE_D
    (5) estatutos -> . estatuto estatutos
    (6) estatutos -> . vacio
    (48) estatuto -> . asignacion
    (49) estatuto -> . llamadaVoid
    (50) estatuto -> . retorno
    (51) estatuto -> . lectura
    (52) estatuto -> . escritura
    (53) estatuto -> . condicion
    (54) estatuto -> . cicloWhile
    (55) estatuto -> . cicloFor
    (1) vacio -> .
    (60) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (61) llamadaVoid -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (65) retorno -> . RETURN expresion PUNTO_COMA
    (64) lectura -> . READ variable
    (66) escritura -> . PRINT PARENTESIS_I j
    (71) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (74) cicloWhile -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (75) cicloFor -> . FOR variable IGUAL expresion UNTIL bloque
    (56) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 87
    RETURN          shift and go to state 88
    READ            shift and go to state 89
    PRINT           shift and go to state 90
    IF              shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93

    estatutos                      shift and go to state 75
    estatuto                       shift and go to state 76
    vacio                          shift and go to state 77
    asignacion                     shift and go to state 78
    llamadaVoid                    shift and go to state 79
    retorno                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cicloWhile                     shift and go to state 84
    cicloFor                       shift and go to state 85
    variable                       shift and go to state 86

state 67

    (38) funciones -> FUNC f ID PARENTESIS_I param . PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z

    PARENTESIS_D    shift and go to state 94


state 68

    (44) param -> tiposimple . ID g

    ID              shift and go to state 95


state 69

    (45) param -> vacio .

    PARENTESIS_D    reduce using rule 45 (param -> vacio .)


state 70

    (25) b -> COMA a b .

    PUNTO_COMA      reduce using rule 25 (b -> COMA a b .)


state 71

    (23) a -> ID CORCHETE_I CTEINT CORCHETE_D .

    COMA            reduce using rule 23 (a -> ID CORCHETE_I CTEINT CORCHETE_D .)
    PUNTO_COMA      reduce using rule 23 (a -> ID CORCHETE_I CTEINT CORCHETE_D .)


state 72

    (24) a -> ID CORCHETE_I CTEINT COMA . CTEINT CORCHETE_D

    CTEINT          shift and go to state 96


state 73

    (28) d -> COMA c d .

    PUNTO_COMA      reduce using rule 28 (d -> COMA c d .)


state 74

    (7) clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA . nuevacl
    (16) nuevacl -> . clases
    (17) nuevacl -> . vacio
    (7) clases -> . CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl
    (8) clases -> . vacio
    (1) vacio -> .

    CLASS           shift and go to state 6
    VAR             reduce using rule 1 (vacio -> .)
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    nuevacl                        shift and go to state 97
    clases                         shift and go to state 98
    vacio                          shift and go to state 99

state 75

    (4) bloque -> LLAVE_I estatutos . LLAVE_D

    LLAVE_D         shift and go to state 100


state 76

    (5) estatutos -> estatuto . estatutos
    (5) estatutos -> . estatuto estatutos
    (6) estatutos -> . vacio
    (48) estatuto -> . asignacion
    (49) estatuto -> . llamadaVoid
    (50) estatuto -> . retorno
    (51) estatuto -> . lectura
    (52) estatuto -> . escritura
    (53) estatuto -> . condicion
    (54) estatuto -> . cicloWhile
    (55) estatuto -> . cicloFor
    (1) vacio -> .
    (60) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (61) llamadaVoid -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (65) retorno -> . RETURN expresion PUNTO_COMA
    (64) lectura -> . READ variable
    (66) escritura -> . PRINT PARENTESIS_I j
    (71) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (74) cicloWhile -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (75) cicloFor -> . FOR variable IGUAL expresion UNTIL bloque
    (56) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 87
    RETURN          shift and go to state 88
    READ            shift and go to state 89
    PRINT           shift and go to state 90
    IF              shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93

    estatuto                       shift and go to state 76
    estatutos                      shift and go to state 101
    vacio                          shift and go to state 77
    asignacion                     shift and go to state 78
    llamadaVoid                    shift and go to state 79
    retorno                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cicloWhile                     shift and go to state 84
    cicloFor                       shift and go to state 85
    variable                       shift and go to state 86

state 77

    (6) estatutos -> vacio .

    LLAVE_D         reduce using rule 6 (estatutos -> vacio .)


state 78

    (48) estatuto -> asignacion .

    ID              reduce using rule 48 (estatuto -> asignacion .)
    RETURN          reduce using rule 48 (estatuto -> asignacion .)
    READ            reduce using rule 48 (estatuto -> asignacion .)
    PRINT           reduce using rule 48 (estatuto -> asignacion .)
    IF              reduce using rule 48 (estatuto -> asignacion .)
    WHILE           reduce using rule 48 (estatuto -> asignacion .)
    FOR             reduce using rule 48 (estatuto -> asignacion .)
    LLAVE_D         reduce using rule 48 (estatuto -> asignacion .)


state 79

    (49) estatuto -> llamadaVoid .

    ID              reduce using rule 49 (estatuto -> llamadaVoid .)
    RETURN          reduce using rule 49 (estatuto -> llamadaVoid .)
    READ            reduce using rule 49 (estatuto -> llamadaVoid .)
    PRINT           reduce using rule 49 (estatuto -> llamadaVoid .)
    IF              reduce using rule 49 (estatuto -> llamadaVoid .)
    WHILE           reduce using rule 49 (estatuto -> llamadaVoid .)
    FOR             reduce using rule 49 (estatuto -> llamadaVoid .)
    LLAVE_D         reduce using rule 49 (estatuto -> llamadaVoid .)


state 80

    (50) estatuto -> retorno .

    ID              reduce using rule 50 (estatuto -> retorno .)
    RETURN          reduce using rule 50 (estatuto -> retorno .)
    READ            reduce using rule 50 (estatuto -> retorno .)
    PRINT           reduce using rule 50 (estatuto -> retorno .)
    IF              reduce using rule 50 (estatuto -> retorno .)
    WHILE           reduce using rule 50 (estatuto -> retorno .)
    FOR             reduce using rule 50 (estatuto -> retorno .)
    LLAVE_D         reduce using rule 50 (estatuto -> retorno .)


state 81

    (51) estatuto -> lectura .

    ID              reduce using rule 51 (estatuto -> lectura .)
    RETURN          reduce using rule 51 (estatuto -> lectura .)
    READ            reduce using rule 51 (estatuto -> lectura .)
    PRINT           reduce using rule 51 (estatuto -> lectura .)
    IF              reduce using rule 51 (estatuto -> lectura .)
    WHILE           reduce using rule 51 (estatuto -> lectura .)
    FOR             reduce using rule 51 (estatuto -> lectura .)
    LLAVE_D         reduce using rule 51 (estatuto -> lectura .)


state 82

    (52) estatuto -> escritura .

    ID              reduce using rule 52 (estatuto -> escritura .)
    RETURN          reduce using rule 52 (estatuto -> escritura .)
    READ            reduce using rule 52 (estatuto -> escritura .)
    PRINT           reduce using rule 52 (estatuto -> escritura .)
    IF              reduce using rule 52 (estatuto -> escritura .)
    WHILE           reduce using rule 52 (estatuto -> escritura .)
    FOR             reduce using rule 52 (estatuto -> escritura .)
    LLAVE_D         reduce using rule 52 (estatuto -> escritura .)


state 83

    (53) estatuto -> condicion .

    ID              reduce using rule 53 (estatuto -> condicion .)
    RETURN          reduce using rule 53 (estatuto -> condicion .)
    READ            reduce using rule 53 (estatuto -> condicion .)
    PRINT           reduce using rule 53 (estatuto -> condicion .)
    IF              reduce using rule 53 (estatuto -> condicion .)
    WHILE           reduce using rule 53 (estatuto -> condicion .)
    FOR             reduce using rule 53 (estatuto -> condicion .)
    LLAVE_D         reduce using rule 53 (estatuto -> condicion .)


state 84

    (54) estatuto -> cicloWhile .

    ID              reduce using rule 54 (estatuto -> cicloWhile .)
    RETURN          reduce using rule 54 (estatuto -> cicloWhile .)
    READ            reduce using rule 54 (estatuto -> cicloWhile .)
    PRINT           reduce using rule 54 (estatuto -> cicloWhile .)
    IF              reduce using rule 54 (estatuto -> cicloWhile .)
    WHILE           reduce using rule 54 (estatuto -> cicloWhile .)
    FOR             reduce using rule 54 (estatuto -> cicloWhile .)
    LLAVE_D         reduce using rule 54 (estatuto -> cicloWhile .)


state 85

    (55) estatuto -> cicloFor .

    ID              reduce using rule 55 (estatuto -> cicloFor .)
    RETURN          reduce using rule 55 (estatuto -> cicloFor .)
    READ            reduce using rule 55 (estatuto -> cicloFor .)
    PRINT           reduce using rule 55 (estatuto -> cicloFor .)
    IF              reduce using rule 55 (estatuto -> cicloFor .)
    WHILE           reduce using rule 55 (estatuto -> cicloFor .)
    FOR             reduce using rule 55 (estatuto -> cicloFor .)
    LLAVE_D         reduce using rule 55 (estatuto -> cicloFor .)


state 86

    (60) asignacion -> variable . IGUAL expresion PUNTO_COMA

    IGUAL           shift and go to state 102


state 87

    (61) llamadaVoid -> ID . PARENTESIS_I expresion I PARENTESIS_D
    (56) variable -> ID . h
    (57) h -> . CORCHETE_I expresion CORCHETE_D
    (58) h -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (59) h -> . vacio
    (1) vacio -> .

    PARENTESIS_I    shift and go to state 103
    CORCHETE_I      shift and go to state 105
    IGUAL           reduce using rule 1 (vacio -> .)

    h                              shift and go to state 104
    vacio                          shift and go to state 106

state 88

    (65) retorno -> RETURN . expresion PUNTO_COMA
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 89

    (64) lectura -> READ . variable
    (56) variable -> . ID h

    ID              shift and go to state 120

    variable                       shift and go to state 119

state 90

    (66) escritura -> PRINT . PARENTESIS_I j

    PARENTESIS_I    shift and go to state 121


state 91

    (71) condicion -> IF . PARENTESIS_I expresion PARENTESIS_D bloque l

    PARENTESIS_I    shift and go to state 122


state 92

    (74) cicloWhile -> WHILE . PARENTESIS_I expresion PARENTESIS_D bloque

    PARENTESIS_I    shift and go to state 123


state 93

    (75) cicloFor -> FOR . variable IGUAL expresion UNTIL bloque
    (56) variable -> . ID h

    ID              shift and go to state 120

    variable                       shift and go to state 124

state 94

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D . LLAVE_I decVar estatutos LLAVE_D z

    LLAVE_I         shift and go to state 125


state 95

    (44) param -> tiposimple ID . g
    (46) g -> . COMA param
    (47) g -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 127
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    g                              shift and go to state 126
    vacio                          shift and go to state 128

state 96

    (24) a -> ID CORCHETE_I CTEINT COMA CTEINT . CORCHETE_D

    CORCHETE_D      shift and go to state 129


state 97

    (7) clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl .

    VAR             reduce using rule 7 (clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl .)
    FUNC            reduce using rule 7 (clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl .)
    MAIN            reduce using rule 7 (clases -> CLASS ID heren LLAVE_I contenido LLAVE_D PUNTO_COMA nuevacl .)


state 98

    (16) nuevacl -> clases .

    VAR             reduce using rule 16 (nuevacl -> clases .)
    FUNC            reduce using rule 16 (nuevacl -> clases .)
    MAIN            reduce using rule 16 (nuevacl -> clases .)


state 99

    (17) nuevacl -> vacio .
    (8) clases -> vacio .

  ! reduce/reduce conflict for VAR resolved using rule 8 (clases -> vacio .)
  ! reduce/reduce conflict for FUNC resolved using rule 8 (clases -> vacio .)
  ! reduce/reduce conflict for MAIN resolved using rule 8 (clases -> vacio .)
    VAR             reduce using rule 8 (clases -> vacio .)
    FUNC            reduce using rule 8 (clases -> vacio .)
    MAIN            reduce using rule 8 (clases -> vacio .)

  ! VAR             [ reduce using rule 17 (nuevacl -> vacio .) ]
  ! FUNC            [ reduce using rule 17 (nuevacl -> vacio .) ]
  ! MAIN            [ reduce using rule 17 (nuevacl -> vacio .) ]


state 100

    (4) bloque -> LLAVE_I estatutos LLAVE_D .

    $end            reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    ELSE            reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    ID              reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    RETURN          reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    READ            reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    PRINT           reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    IF              reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    WHILE           reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    FOR             reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)
    LLAVE_D         reduce using rule 4 (bloque -> LLAVE_I estatutos LLAVE_D .)


state 101

    (5) estatutos -> estatuto estatutos .

    LLAVE_D         reduce using rule 5 (estatutos -> estatuto estatutos .)


state 102

    (60) asignacion -> variable IGUAL . expresion PUNTO_COMA
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 130
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 103

    (61) llamadaVoid -> ID PARENTESIS_I . expresion I PARENTESIS_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 131
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 104

    (56) variable -> ID h .

    IGUAL           reduce using rule 56 (variable -> ID h .)
    ID              reduce using rule 56 (variable -> ID h .)
    RETURN          reduce using rule 56 (variable -> ID h .)
    READ            reduce using rule 56 (variable -> ID h .)
    PRINT           reduce using rule 56 (variable -> ID h .)
    IF              reduce using rule 56 (variable -> ID h .)
    WHILE           reduce using rule 56 (variable -> ID h .)
    FOR             reduce using rule 56 (variable -> ID h .)
    LLAVE_D         reduce using rule 56 (variable -> ID h .)


state 105

    (57) h -> CORCHETE_I . expresion CORCHETE_D
    (58) h -> CORCHETE_I . expresion COMA expresion CORCHETE_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 132
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 106

    (59) h -> vacio .

    IGUAL           reduce using rule 59 (h -> vacio .)
    ID              reduce using rule 59 (h -> vacio .)
    RETURN          reduce using rule 59 (h -> vacio .)
    READ            reduce using rule 59 (h -> vacio .)
    PRINT           reduce using rule 59 (h -> vacio .)
    IF              reduce using rule 59 (h -> vacio .)
    WHILE           reduce using rule 59 (h -> vacio .)
    FOR             reduce using rule 59 (h -> vacio .)
    LLAVE_D         reduce using rule 59 (h -> vacio .)


state 107

    (65) retorno -> RETURN expresion . PUNTO_COMA

    PUNTO_COMA      shift and go to state 133


state 108

    (76) expresion -> exp . m
    (77) m -> . MAYOR_QUE exp
    (78) m -> . MENOR_QUE exp
    (79) m -> . NO_IGUAL exp
    (80) m -> . vacio
    (1) vacio -> .

    MAYOR_QUE       shift and go to state 135
    MENOR_QUE       shift and go to state 136
    NO_IGUAL        shift and go to state 137
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    m                              shift and go to state 134
    vacio                          shift and go to state 138

state 109

    (81) exp -> termino . n
    (82) n -> . MAS exp
    (83) n -> . MENOS exp
    (84) n -> . vacio
    (1) vacio -> .

    MAS             shift and go to state 140
    MENOS           shift and go to state 141
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    n                              shift and go to state 139
    vacio                          shift and go to state 142

state 110

    (85) termino -> factor . o
    (86) o -> . POR termino
    (87) o -> . ENTRE termino
    (88) o -> . vacio
    (1) vacio -> .

    POR             shift and go to state 144
    ENTRE           shift and go to state 145
    MAS             reduce using rule 1 (vacio -> .)
    MENOS           reduce using rule 1 (vacio -> .)
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    o                              shift and go to state 143
    vacio                          shift and go to state 146

state 111

    (89) factor -> varcte .

    POR             reduce using rule 89 (factor -> varcte .)
    ENTRE           reduce using rule 89 (factor -> varcte .)
    MAS             reduce using rule 89 (factor -> varcte .)
    MENOS           reduce using rule 89 (factor -> varcte .)
    MAYOR_QUE       reduce using rule 89 (factor -> varcte .)
    MENOR_QUE       reduce using rule 89 (factor -> varcte .)
    NO_IGUAL        reduce using rule 89 (factor -> varcte .)
    PUNTO_COMA      reduce using rule 89 (factor -> varcte .)
    COMA            reduce using rule 89 (factor -> varcte .)
    PARENTESIS_D    reduce using rule 89 (factor -> varcte .)
    CORCHETE_D      reduce using rule 89 (factor -> varcte .)
    UNTIL           reduce using rule 89 (factor -> varcte .)


state 112

    (90) factor -> ID . p
    (94) p -> . CORCHETE_I expresion CORCHETE_D
    (95) p -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (96) p -> . PARENTESIS_I expresion q PARENTESIS_D
    (97) p -> . PUNTO ID
    (98) p -> . PUNTO ID PARENTESIS_I r PARENTESIS_D
    (99) p -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 148
    PARENTESIS_I    shift and go to state 149
    PUNTO           shift and go to state 150
    POR             reduce using rule 1 (vacio -> .)
    ENTRE           reduce using rule 1 (vacio -> .)
    MAS             reduce using rule 1 (vacio -> .)
    MENOS           reduce using rule 1 (vacio -> .)
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    p                              shift and go to state 147
    vacio                          shift and go to state 151

state 113

    (91) factor -> PARENTESIS_I . expresion PARENTESIS_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 152
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 114

    (92) factor -> MAS . varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    varcte                         shift and go to state 153

state 115

    (93) factor -> MENOS . varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    varcte                         shift and go to state 154

state 116

    (106) varcte -> CTECHAR .

    POR             reduce using rule 106 (varcte -> CTECHAR .)
    ENTRE           reduce using rule 106 (varcte -> CTECHAR .)
    MAS             reduce using rule 106 (varcte -> CTECHAR .)
    MENOS           reduce using rule 106 (varcte -> CTECHAR .)
    MAYOR_QUE       reduce using rule 106 (varcte -> CTECHAR .)
    MENOR_QUE       reduce using rule 106 (varcte -> CTECHAR .)
    NO_IGUAL        reduce using rule 106 (varcte -> CTECHAR .)
    PUNTO_COMA      reduce using rule 106 (varcte -> CTECHAR .)
    COMA            reduce using rule 106 (varcte -> CTECHAR .)
    PARENTESIS_D    reduce using rule 106 (varcte -> CTECHAR .)
    CORCHETE_D      reduce using rule 106 (varcte -> CTECHAR .)
    UNTIL           reduce using rule 106 (varcte -> CTECHAR .)


state 117

    (107) varcte -> CTEINT .

    POR             reduce using rule 107 (varcte -> CTEINT .)
    ENTRE           reduce using rule 107 (varcte -> CTEINT .)
    MAS             reduce using rule 107 (varcte -> CTEINT .)
    MENOS           reduce using rule 107 (varcte -> CTEINT .)
    MAYOR_QUE       reduce using rule 107 (varcte -> CTEINT .)
    MENOR_QUE       reduce using rule 107 (varcte -> CTEINT .)
    NO_IGUAL        reduce using rule 107 (varcte -> CTEINT .)
    PUNTO_COMA      reduce using rule 107 (varcte -> CTEINT .)
    COMA            reduce using rule 107 (varcte -> CTEINT .)
    PARENTESIS_D    reduce using rule 107 (varcte -> CTEINT .)
    CORCHETE_D      reduce using rule 107 (varcte -> CTEINT .)
    UNTIL           reduce using rule 107 (varcte -> CTEINT .)


state 118

    (108) varcte -> CTEFLOAT .

    POR             reduce using rule 108 (varcte -> CTEFLOAT .)
    ENTRE           reduce using rule 108 (varcte -> CTEFLOAT .)
    MAS             reduce using rule 108 (varcte -> CTEFLOAT .)
    MENOS           reduce using rule 108 (varcte -> CTEFLOAT .)
    MAYOR_QUE       reduce using rule 108 (varcte -> CTEFLOAT .)
    MENOR_QUE       reduce using rule 108 (varcte -> CTEFLOAT .)
    NO_IGUAL        reduce using rule 108 (varcte -> CTEFLOAT .)
    PUNTO_COMA      reduce using rule 108 (varcte -> CTEFLOAT .)
    COMA            reduce using rule 108 (varcte -> CTEFLOAT .)
    PARENTESIS_D    reduce using rule 108 (varcte -> CTEFLOAT .)
    CORCHETE_D      reduce using rule 108 (varcte -> CTEFLOAT .)
    UNTIL           reduce using rule 108 (varcte -> CTEFLOAT .)


state 119

    (64) lectura -> READ variable .

    ID              reduce using rule 64 (lectura -> READ variable .)
    RETURN          reduce using rule 64 (lectura -> READ variable .)
    READ            reduce using rule 64 (lectura -> READ variable .)
    PRINT           reduce using rule 64 (lectura -> READ variable .)
    IF              reduce using rule 64 (lectura -> READ variable .)
    WHILE           reduce using rule 64 (lectura -> READ variable .)
    FOR             reduce using rule 64 (lectura -> READ variable .)
    LLAVE_D         reduce using rule 64 (lectura -> READ variable .)


state 120

    (56) variable -> ID . h
    (57) h -> . CORCHETE_I expresion CORCHETE_D
    (58) h -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (59) h -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 105
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)
    IGUAL           reduce using rule 1 (vacio -> .)

    h                              shift and go to state 104
    vacio                          shift and go to state 106

state 121

    (66) escritura -> PRINT PARENTESIS_I . j
    (67) j -> . CTESTRING k
    (68) j -> . expresion k
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    CTESTRING       shift and go to state 156
    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    j                              shift and go to state 155
    expresion                      shift and go to state 157
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 122

    (71) condicion -> IF PARENTESIS_I . expresion PARENTESIS_D bloque l
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 158
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 123

    (74) cicloWhile -> WHILE PARENTESIS_I . expresion PARENTESIS_D bloque
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 159
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 124

    (75) cicloFor -> FOR variable . IGUAL expresion UNTIL bloque

    IGUAL           shift and go to state 160


state 125

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I . decVar estatutos LLAVE_D z
    (18) decVar -> . VAR tipo PUNTO_COMA e
    (19) decVar -> . vacio
    (1) vacio -> .

    VAR             shift and go to state 9
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    decVar                         shift and go to state 161
    vacio                          shift and go to state 10

state 126

    (44) param -> tiposimple ID g .

    PARENTESIS_D    reduce using rule 44 (param -> tiposimple ID g .)


state 127

    (46) g -> COMA . param
    (44) param -> . tiposimple ID g
    (45) param -> . vacio
    (32) tiposimple -> . INT
    (33) tiposimple -> . FLOAT
    (34) tiposimple -> . CHAR
    (1) vacio -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    param                          shift and go to state 162
    tiposimple                     shift and go to state 68
    vacio                          shift and go to state 69

state 128

    (47) g -> vacio .

    PARENTESIS_D    reduce using rule 47 (g -> vacio .)


state 129

    (24) a -> ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .

    COMA            reduce using rule 24 (a -> ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .)
    PUNTO_COMA      reduce using rule 24 (a -> ID CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .)


state 130

    (60) asignacion -> variable IGUAL expresion . PUNTO_COMA

    PUNTO_COMA      shift and go to state 163


state 131

    (61) llamadaVoid -> ID PARENTESIS_I expresion . I PARENTESIS_D
    (62) I -> . COMA expresion I
    (63) I -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 165
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    I                              shift and go to state 164
    vacio                          shift and go to state 166

state 132

    (57) h -> CORCHETE_I expresion . CORCHETE_D
    (58) h -> CORCHETE_I expresion . COMA expresion CORCHETE_D

    CORCHETE_D      shift and go to state 167
    COMA            shift and go to state 168


state 133

    (65) retorno -> RETURN expresion PUNTO_COMA .

    ID              reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    RETURN          reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    READ            reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    PRINT           reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    IF              reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    WHILE           reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    FOR             reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)
    LLAVE_D         reduce using rule 65 (retorno -> RETURN expresion PUNTO_COMA .)


state 134

    (76) expresion -> exp m .

    PUNTO_COMA      reduce using rule 76 (expresion -> exp m .)
    COMA            reduce using rule 76 (expresion -> exp m .)
    PARENTESIS_D    reduce using rule 76 (expresion -> exp m .)
    CORCHETE_D      reduce using rule 76 (expresion -> exp m .)
    UNTIL           reduce using rule 76 (expresion -> exp m .)


state 135

    (77) m -> MAYOR_QUE . exp
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    exp                            shift and go to state 169
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 136

    (78) m -> MENOR_QUE . exp
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    exp                            shift and go to state 170
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 137

    (79) m -> NO_IGUAL . exp
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    exp                            shift and go to state 171
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 138

    (80) m -> vacio .

    PUNTO_COMA      reduce using rule 80 (m -> vacio .)
    COMA            reduce using rule 80 (m -> vacio .)
    PARENTESIS_D    reduce using rule 80 (m -> vacio .)
    CORCHETE_D      reduce using rule 80 (m -> vacio .)
    UNTIL           reduce using rule 80 (m -> vacio .)


state 139

    (81) exp -> termino n .

    MAYOR_QUE       reduce using rule 81 (exp -> termino n .)
    MENOR_QUE       reduce using rule 81 (exp -> termino n .)
    NO_IGUAL        reduce using rule 81 (exp -> termino n .)
    PUNTO_COMA      reduce using rule 81 (exp -> termino n .)
    COMA            reduce using rule 81 (exp -> termino n .)
    PARENTESIS_D    reduce using rule 81 (exp -> termino n .)
    CORCHETE_D      reduce using rule 81 (exp -> termino n .)
    UNTIL           reduce using rule 81 (exp -> termino n .)


state 140

    (82) n -> MAS . exp
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    exp                            shift and go to state 172
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 141

    (83) n -> MENOS . exp
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    exp                            shift and go to state 173
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 142

    (84) n -> vacio .

    MAYOR_QUE       reduce using rule 84 (n -> vacio .)
    MENOR_QUE       reduce using rule 84 (n -> vacio .)
    NO_IGUAL        reduce using rule 84 (n -> vacio .)
    PUNTO_COMA      reduce using rule 84 (n -> vacio .)
    COMA            reduce using rule 84 (n -> vacio .)
    PARENTESIS_D    reduce using rule 84 (n -> vacio .)
    CORCHETE_D      reduce using rule 84 (n -> vacio .)
    UNTIL           reduce using rule 84 (n -> vacio .)


state 143

    (85) termino -> factor o .

    MAS             reduce using rule 85 (termino -> factor o .)
    MENOS           reduce using rule 85 (termino -> factor o .)
    MAYOR_QUE       reduce using rule 85 (termino -> factor o .)
    MENOR_QUE       reduce using rule 85 (termino -> factor o .)
    NO_IGUAL        reduce using rule 85 (termino -> factor o .)
    PUNTO_COMA      reduce using rule 85 (termino -> factor o .)
    COMA            reduce using rule 85 (termino -> factor o .)
    PARENTESIS_D    reduce using rule 85 (termino -> factor o .)
    CORCHETE_D      reduce using rule 85 (termino -> factor o .)
    UNTIL           reduce using rule 85 (termino -> factor o .)


state 144

    (86) o -> POR . termino
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    termino                        shift and go to state 174
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 145

    (87) o -> ENTRE . termino
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    termino                        shift and go to state 175
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 146

    (88) o -> vacio .

    MAS             reduce using rule 88 (o -> vacio .)
    MENOS           reduce using rule 88 (o -> vacio .)
    MAYOR_QUE       reduce using rule 88 (o -> vacio .)
    MENOR_QUE       reduce using rule 88 (o -> vacio .)
    NO_IGUAL        reduce using rule 88 (o -> vacio .)
    PUNTO_COMA      reduce using rule 88 (o -> vacio .)
    COMA            reduce using rule 88 (o -> vacio .)
    PARENTESIS_D    reduce using rule 88 (o -> vacio .)
    CORCHETE_D      reduce using rule 88 (o -> vacio .)
    UNTIL           reduce using rule 88 (o -> vacio .)


state 147

    (90) factor -> ID p .

    POR             reduce using rule 90 (factor -> ID p .)
    ENTRE           reduce using rule 90 (factor -> ID p .)
    MAS             reduce using rule 90 (factor -> ID p .)
    MENOS           reduce using rule 90 (factor -> ID p .)
    MAYOR_QUE       reduce using rule 90 (factor -> ID p .)
    MENOR_QUE       reduce using rule 90 (factor -> ID p .)
    NO_IGUAL        reduce using rule 90 (factor -> ID p .)
    PUNTO_COMA      reduce using rule 90 (factor -> ID p .)
    COMA            reduce using rule 90 (factor -> ID p .)
    PARENTESIS_D    reduce using rule 90 (factor -> ID p .)
    CORCHETE_D      reduce using rule 90 (factor -> ID p .)
    UNTIL           reduce using rule 90 (factor -> ID p .)


state 148

    (94) p -> CORCHETE_I . expresion CORCHETE_D
    (95) p -> CORCHETE_I . expresion COMA expresion CORCHETE_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 176
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 149

    (96) p -> PARENTESIS_I . expresion q PARENTESIS_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 177
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 150

    (97) p -> PUNTO . ID
    (98) p -> PUNTO . ID PARENTESIS_I r PARENTESIS_D

    ID              shift and go to state 178


state 151

    (99) p -> vacio .

    POR             reduce using rule 99 (p -> vacio .)
    ENTRE           reduce using rule 99 (p -> vacio .)
    MAS             reduce using rule 99 (p -> vacio .)
    MENOS           reduce using rule 99 (p -> vacio .)
    MAYOR_QUE       reduce using rule 99 (p -> vacio .)
    MENOR_QUE       reduce using rule 99 (p -> vacio .)
    NO_IGUAL        reduce using rule 99 (p -> vacio .)
    PUNTO_COMA      reduce using rule 99 (p -> vacio .)
    COMA            reduce using rule 99 (p -> vacio .)
    PARENTESIS_D    reduce using rule 99 (p -> vacio .)
    CORCHETE_D      reduce using rule 99 (p -> vacio .)
    UNTIL           reduce using rule 99 (p -> vacio .)


state 152

    (91) factor -> PARENTESIS_I expresion . PARENTESIS_D

    PARENTESIS_D    shift and go to state 179


state 153

    (92) factor -> MAS varcte .

    POR             reduce using rule 92 (factor -> MAS varcte .)
    ENTRE           reduce using rule 92 (factor -> MAS varcte .)
    MAS             reduce using rule 92 (factor -> MAS varcte .)
    MENOS           reduce using rule 92 (factor -> MAS varcte .)
    MAYOR_QUE       reduce using rule 92 (factor -> MAS varcte .)
    MENOR_QUE       reduce using rule 92 (factor -> MAS varcte .)
    NO_IGUAL        reduce using rule 92 (factor -> MAS varcte .)
    PUNTO_COMA      reduce using rule 92 (factor -> MAS varcte .)
    COMA            reduce using rule 92 (factor -> MAS varcte .)
    PARENTESIS_D    reduce using rule 92 (factor -> MAS varcte .)
    CORCHETE_D      reduce using rule 92 (factor -> MAS varcte .)
    UNTIL           reduce using rule 92 (factor -> MAS varcte .)


state 154

    (93) factor -> MENOS varcte .

    POR             reduce using rule 93 (factor -> MENOS varcte .)
    ENTRE           reduce using rule 93 (factor -> MENOS varcte .)
    MAS             reduce using rule 93 (factor -> MENOS varcte .)
    MENOS           reduce using rule 93 (factor -> MENOS varcte .)
    MAYOR_QUE       reduce using rule 93 (factor -> MENOS varcte .)
    MENOR_QUE       reduce using rule 93 (factor -> MENOS varcte .)
    NO_IGUAL        reduce using rule 93 (factor -> MENOS varcte .)
    PUNTO_COMA      reduce using rule 93 (factor -> MENOS varcte .)
    COMA            reduce using rule 93 (factor -> MENOS varcte .)
    PARENTESIS_D    reduce using rule 93 (factor -> MENOS varcte .)
    CORCHETE_D      reduce using rule 93 (factor -> MENOS varcte .)
    UNTIL           reduce using rule 93 (factor -> MENOS varcte .)


state 155

    (66) escritura -> PRINT PARENTESIS_I j .

    ID              reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    RETURN          reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    READ            reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    PRINT           reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    IF              reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    WHILE           reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    FOR             reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)
    LLAVE_D         reduce using rule 66 (escritura -> PRINT PARENTESIS_I j .)


state 156

    (67) j -> CTESTRING . k
    (69) k -> . COMA j
    (70) k -> . PARENTESIS_D PUNTO_COMA

    COMA            shift and go to state 181
    PARENTESIS_D    shift and go to state 182

    k                              shift and go to state 180

state 157

    (68) j -> expresion . k
    (69) k -> . COMA j
    (70) k -> . PARENTESIS_D PUNTO_COMA

    COMA            shift and go to state 181
    PARENTESIS_D    shift and go to state 182

    k                              shift and go to state 183

state 158

    (71) condicion -> IF PARENTESIS_I expresion . PARENTESIS_D bloque l

    PARENTESIS_D    shift and go to state 184


state 159

    (74) cicloWhile -> WHILE PARENTESIS_I expresion . PARENTESIS_D bloque

    PARENTESIS_D    shift and go to state 185


state 160

    (75) cicloFor -> FOR variable IGUAL . expresion UNTIL bloque
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 186
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 161

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar . estatutos LLAVE_D z
    (5) estatutos -> . estatuto estatutos
    (6) estatutos -> . vacio
    (48) estatuto -> . asignacion
    (49) estatuto -> . llamadaVoid
    (50) estatuto -> . retorno
    (51) estatuto -> . lectura
    (52) estatuto -> . escritura
    (53) estatuto -> . condicion
    (54) estatuto -> . cicloWhile
    (55) estatuto -> . cicloFor
    (1) vacio -> .
    (60) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (61) llamadaVoid -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (65) retorno -> . RETURN expresion PUNTO_COMA
    (64) lectura -> . READ variable
    (66) escritura -> . PRINT PARENTESIS_I j
    (71) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (74) cicloWhile -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (75) cicloFor -> . FOR variable IGUAL expresion UNTIL bloque
    (56) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 87
    RETURN          shift and go to state 88
    READ            shift and go to state 89
    PRINT           shift and go to state 90
    IF              shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93

    estatutos                      shift and go to state 187
    estatuto                       shift and go to state 76
    vacio                          shift and go to state 77
    asignacion                     shift and go to state 78
    llamadaVoid                    shift and go to state 79
    retorno                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cicloWhile                     shift and go to state 84
    cicloFor                       shift and go to state 85
    variable                       shift and go to state 86

state 162

    (46) g -> COMA param .

    PARENTESIS_D    reduce using rule 46 (g -> COMA param .)


state 163

    (60) asignacion -> variable IGUAL expresion PUNTO_COMA .

    ID              reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    RETURN          reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    READ            reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    PRINT           reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    IF              reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    WHILE           reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    FOR             reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    LLAVE_D         reduce using rule 60 (asignacion -> variable IGUAL expresion PUNTO_COMA .)


state 164

    (61) llamadaVoid -> ID PARENTESIS_I expresion I . PARENTESIS_D

    PARENTESIS_D    shift and go to state 188


state 165

    (62) I -> COMA . expresion I
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 189
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 166

    (63) I -> vacio .

    PARENTESIS_D    reduce using rule 63 (I -> vacio .)


state 167

    (57) h -> CORCHETE_I expresion CORCHETE_D .

    IGUAL           reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    ID              reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    RETURN          reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    READ            reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    PRINT           reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    IF              reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    WHILE           reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    FOR             reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)
    LLAVE_D         reduce using rule 57 (h -> CORCHETE_I expresion CORCHETE_D .)


state 168

    (58) h -> CORCHETE_I expresion COMA . expresion CORCHETE_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 190
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 169

    (77) m -> MAYOR_QUE exp .

    PUNTO_COMA      reduce using rule 77 (m -> MAYOR_QUE exp .)
    COMA            reduce using rule 77 (m -> MAYOR_QUE exp .)
    PARENTESIS_D    reduce using rule 77 (m -> MAYOR_QUE exp .)
    CORCHETE_D      reduce using rule 77 (m -> MAYOR_QUE exp .)
    UNTIL           reduce using rule 77 (m -> MAYOR_QUE exp .)


state 170

    (78) m -> MENOR_QUE exp .

    PUNTO_COMA      reduce using rule 78 (m -> MENOR_QUE exp .)
    COMA            reduce using rule 78 (m -> MENOR_QUE exp .)
    PARENTESIS_D    reduce using rule 78 (m -> MENOR_QUE exp .)
    CORCHETE_D      reduce using rule 78 (m -> MENOR_QUE exp .)
    UNTIL           reduce using rule 78 (m -> MENOR_QUE exp .)


state 171

    (79) m -> NO_IGUAL exp .

    PUNTO_COMA      reduce using rule 79 (m -> NO_IGUAL exp .)
    COMA            reduce using rule 79 (m -> NO_IGUAL exp .)
    PARENTESIS_D    reduce using rule 79 (m -> NO_IGUAL exp .)
    CORCHETE_D      reduce using rule 79 (m -> NO_IGUAL exp .)
    UNTIL           reduce using rule 79 (m -> NO_IGUAL exp .)


state 172

    (82) n -> MAS exp .

    MAYOR_QUE       reduce using rule 82 (n -> MAS exp .)
    MENOR_QUE       reduce using rule 82 (n -> MAS exp .)
    NO_IGUAL        reduce using rule 82 (n -> MAS exp .)
    PUNTO_COMA      reduce using rule 82 (n -> MAS exp .)
    COMA            reduce using rule 82 (n -> MAS exp .)
    PARENTESIS_D    reduce using rule 82 (n -> MAS exp .)
    CORCHETE_D      reduce using rule 82 (n -> MAS exp .)
    UNTIL           reduce using rule 82 (n -> MAS exp .)


state 173

    (83) n -> MENOS exp .

    MAYOR_QUE       reduce using rule 83 (n -> MENOS exp .)
    MENOR_QUE       reduce using rule 83 (n -> MENOS exp .)
    NO_IGUAL        reduce using rule 83 (n -> MENOS exp .)
    PUNTO_COMA      reduce using rule 83 (n -> MENOS exp .)
    COMA            reduce using rule 83 (n -> MENOS exp .)
    PARENTESIS_D    reduce using rule 83 (n -> MENOS exp .)
    CORCHETE_D      reduce using rule 83 (n -> MENOS exp .)
    UNTIL           reduce using rule 83 (n -> MENOS exp .)


state 174

    (86) o -> POR termino .

    MAS             reduce using rule 86 (o -> POR termino .)
    MENOS           reduce using rule 86 (o -> POR termino .)
    MAYOR_QUE       reduce using rule 86 (o -> POR termino .)
    MENOR_QUE       reduce using rule 86 (o -> POR termino .)
    NO_IGUAL        reduce using rule 86 (o -> POR termino .)
    PUNTO_COMA      reduce using rule 86 (o -> POR termino .)
    COMA            reduce using rule 86 (o -> POR termino .)
    PARENTESIS_D    reduce using rule 86 (o -> POR termino .)
    CORCHETE_D      reduce using rule 86 (o -> POR termino .)
    UNTIL           reduce using rule 86 (o -> POR termino .)


state 175

    (87) o -> ENTRE termino .

    MAS             reduce using rule 87 (o -> ENTRE termino .)
    MENOS           reduce using rule 87 (o -> ENTRE termino .)
    MAYOR_QUE       reduce using rule 87 (o -> ENTRE termino .)
    MENOR_QUE       reduce using rule 87 (o -> ENTRE termino .)
    NO_IGUAL        reduce using rule 87 (o -> ENTRE termino .)
    PUNTO_COMA      reduce using rule 87 (o -> ENTRE termino .)
    COMA            reduce using rule 87 (o -> ENTRE termino .)
    PARENTESIS_D    reduce using rule 87 (o -> ENTRE termino .)
    CORCHETE_D      reduce using rule 87 (o -> ENTRE termino .)
    UNTIL           reduce using rule 87 (o -> ENTRE termino .)


state 176

    (94) p -> CORCHETE_I expresion . CORCHETE_D
    (95) p -> CORCHETE_I expresion . COMA expresion CORCHETE_D

    CORCHETE_D      shift and go to state 191
    COMA            shift and go to state 192


state 177

    (96) p -> PARENTESIS_I expresion . q PARENTESIS_D
    (100) q -> . COMA expresion q
    (101) q -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 194
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    q                              shift and go to state 193
    vacio                          shift and go to state 195

state 178

    (97) p -> PUNTO ID .
    (98) p -> PUNTO ID . PARENTESIS_I r PARENTESIS_D

    POR             reduce using rule 97 (p -> PUNTO ID .)
    ENTRE           reduce using rule 97 (p -> PUNTO ID .)
    MAS             reduce using rule 97 (p -> PUNTO ID .)
    MENOS           reduce using rule 97 (p -> PUNTO ID .)
    MAYOR_QUE       reduce using rule 97 (p -> PUNTO ID .)
    MENOR_QUE       reduce using rule 97 (p -> PUNTO ID .)
    NO_IGUAL        reduce using rule 97 (p -> PUNTO ID .)
    PUNTO_COMA      reduce using rule 97 (p -> PUNTO ID .)
    COMA            reduce using rule 97 (p -> PUNTO ID .)
    PARENTESIS_D    reduce using rule 97 (p -> PUNTO ID .)
    CORCHETE_D      reduce using rule 97 (p -> PUNTO ID .)
    UNTIL           reduce using rule 97 (p -> PUNTO ID .)
    PARENTESIS_I    shift and go to state 196


state 179

    (91) factor -> PARENTESIS_I expresion PARENTESIS_D .

    POR             reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    ENTRE           reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MAS             reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MENOS           reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MENOR_QUE       reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    NO_IGUAL        reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    COMA            reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    CORCHETE_D      reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    UNTIL           reduce using rule 91 (factor -> PARENTESIS_I expresion PARENTESIS_D .)


state 180

    (67) j -> CTESTRING k .

    ID              reduce using rule 67 (j -> CTESTRING k .)
    RETURN          reduce using rule 67 (j -> CTESTRING k .)
    READ            reduce using rule 67 (j -> CTESTRING k .)
    PRINT           reduce using rule 67 (j -> CTESTRING k .)
    IF              reduce using rule 67 (j -> CTESTRING k .)
    WHILE           reduce using rule 67 (j -> CTESTRING k .)
    FOR             reduce using rule 67 (j -> CTESTRING k .)
    LLAVE_D         reduce using rule 67 (j -> CTESTRING k .)


state 181

    (69) k -> COMA . j
    (67) j -> . CTESTRING k
    (68) j -> . expresion k
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    CTESTRING       shift and go to state 156
    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    j                              shift and go to state 197
    expresion                      shift and go to state 157
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 182

    (70) k -> PARENTESIS_D . PUNTO_COMA

    PUNTO_COMA      shift and go to state 198


state 183

    (68) j -> expresion k .

    ID              reduce using rule 68 (j -> expresion k .)
    RETURN          reduce using rule 68 (j -> expresion k .)
    READ            reduce using rule 68 (j -> expresion k .)
    PRINT           reduce using rule 68 (j -> expresion k .)
    IF              reduce using rule 68 (j -> expresion k .)
    WHILE           reduce using rule 68 (j -> expresion k .)
    FOR             reduce using rule 68 (j -> expresion k .)
    LLAVE_D         reduce using rule 68 (j -> expresion k .)


state 184

    (71) condicion -> IF PARENTESIS_I expresion PARENTESIS_D . bloque l
    (4) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 66

    bloque                         shift and go to state 199

state 185

    (74) cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D . bloque
    (4) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 66

    bloque                         shift and go to state 200

state 186

    (75) cicloFor -> FOR variable IGUAL expresion . UNTIL bloque

    UNTIL           shift and go to state 201


state 187

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos . LLAVE_D z

    LLAVE_D         shift and go to state 202


state 188

    (61) llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .

    ID              reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    RETURN          reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    READ            reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    PRINT           reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    IF              reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    WHILE           reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    FOR             reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    LLAVE_D         reduce using rule 61 (llamadaVoid -> ID PARENTESIS_I expresion I PARENTESIS_D .)


state 189

    (62) I -> COMA expresion . I
    (62) I -> . COMA expresion I
    (63) I -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 165
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    I                              shift and go to state 203
    vacio                          shift and go to state 166

state 190

    (58) h -> CORCHETE_I expresion COMA expresion . CORCHETE_D

    CORCHETE_D      shift and go to state 204


state 191

    (94) p -> CORCHETE_I expresion CORCHETE_D .

    POR             reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    ENTRE           reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    MAS             reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    MENOS           reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    MAYOR_QUE       reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    MENOR_QUE       reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    NO_IGUAL        reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    PUNTO_COMA      reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    COMA            reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    PARENTESIS_D    reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    CORCHETE_D      reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)
    UNTIL           reduce using rule 94 (p -> CORCHETE_I expresion CORCHETE_D .)


state 192

    (95) p -> CORCHETE_I expresion COMA . expresion CORCHETE_D
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 205
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 193

    (96) p -> PARENTESIS_I expresion q . PARENTESIS_D

    PARENTESIS_D    shift and go to state 206


state 194

    (100) q -> COMA . expresion q
    (76) expresion -> . exp m
    (81) exp -> . termino n
    (85) termino -> . factor o
    (89) factor -> . varcte
    (90) factor -> . ID p
    (91) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (92) factor -> . MAS varcte
    (93) factor -> . MENOS varcte
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    ID              shift and go to state 112
    PARENTESIS_I    shift and go to state 113
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    expresion                      shift and go to state 207
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    varcte                         shift and go to state 111

state 195

    (101) q -> vacio .

    PARENTESIS_D    reduce using rule 101 (q -> vacio .)


state 196

    (98) p -> PUNTO ID PARENTESIS_I . r PARENTESIS_D
    (102) r -> . varcte s
    (103) r -> . vacio
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT
    (1) vacio -> .

    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    r                              shift and go to state 208
    varcte                         shift and go to state 209
    vacio                          shift and go to state 210

state 197

    (69) k -> COMA j .

    ID              reduce using rule 69 (k -> COMA j .)
    RETURN          reduce using rule 69 (k -> COMA j .)
    READ            reduce using rule 69 (k -> COMA j .)
    PRINT           reduce using rule 69 (k -> COMA j .)
    IF              reduce using rule 69 (k -> COMA j .)
    WHILE           reduce using rule 69 (k -> COMA j .)
    FOR             reduce using rule 69 (k -> COMA j .)
    LLAVE_D         reduce using rule 69 (k -> COMA j .)


state 198

    (70) k -> PARENTESIS_D PUNTO_COMA .

    ID              reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    RETURN          reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    READ            reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    PRINT           reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    IF              reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    WHILE           reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    FOR             reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)
    LLAVE_D         reduce using rule 70 (k -> PARENTESIS_D PUNTO_COMA .)


state 199

    (71) condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque . l
    (72) l -> . ELSE bloque
    (73) l -> . vacio
    (1) vacio -> .

    ELSE            shift and go to state 212
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    l                              shift and go to state 211
    vacio                          shift and go to state 213

state 200

    (74) cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .

    ID              reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    RETURN          reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    READ            reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    PRINT           reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    IF              reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    WHILE           reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    FOR             reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    LLAVE_D         reduce using rule 74 (cicloWhile -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)


state 201

    (75) cicloFor -> FOR variable IGUAL expresion UNTIL . bloque
    (4) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 66

    bloque                         shift and go to state 214

state 202

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D . z
    (42) z -> . funciones
    (43) z -> . vacio
    (38) funciones -> . FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z
    (39) funciones -> . vacio
    (1) vacio -> .

    FUNC            shift and go to state 13
    MAIN            reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    z                              shift and go to state 215
    funciones                      shift and go to state 216
    vacio                          shift and go to state 217

state 203

    (62) I -> COMA expresion I .

    PARENTESIS_D    reduce using rule 62 (I -> COMA expresion I .)


state 204

    (58) h -> CORCHETE_I expresion COMA expresion CORCHETE_D .

    IGUAL           reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    ID              reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    RETURN          reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    READ            reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PRINT           reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    IF              reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    WHILE           reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    FOR             reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    LLAVE_D         reduce using rule 58 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)


state 205

    (95) p -> CORCHETE_I expresion COMA expresion . CORCHETE_D

    CORCHETE_D      shift and go to state 218


state 206

    (96) p -> PARENTESIS_I expresion q PARENTESIS_D .

    POR             reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    ENTRE           reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MAS             reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MENOS           reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MENOR_QUE       reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    NO_IGUAL        reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    COMA            reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    CORCHETE_D      reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    UNTIL           reduce using rule 96 (p -> PARENTESIS_I expresion q PARENTESIS_D .)


state 207

    (100) q -> COMA expresion . q
    (100) q -> . COMA expresion q
    (101) q -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 194
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    q                              shift and go to state 219
    vacio                          shift and go to state 195

state 208

    (98) p -> PUNTO ID PARENTESIS_I r . PARENTESIS_D

    PARENTESIS_D    shift and go to state 220


state 209

    (102) r -> varcte . s
    (104) s -> . COMA varcte s
    (105) s -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 222
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    s                              shift and go to state 221
    vacio                          shift and go to state 223

state 210

    (103) r -> vacio .

    PARENTESIS_D    reduce using rule 103 (r -> vacio .)


state 211

    (71) condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .

    ID              reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    RETURN          reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    READ            reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    PRINT           reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    IF              reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    WHILE           reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    FOR             reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    LLAVE_D         reduce using rule 71 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)


state 212

    (72) l -> ELSE . bloque
    (4) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 66

    bloque                         shift and go to state 224

state 213

    (73) l -> vacio .

    ID              reduce using rule 73 (l -> vacio .)
    RETURN          reduce using rule 73 (l -> vacio .)
    READ            reduce using rule 73 (l -> vacio .)
    PRINT           reduce using rule 73 (l -> vacio .)
    IF              reduce using rule 73 (l -> vacio .)
    WHILE           reduce using rule 73 (l -> vacio .)
    FOR             reduce using rule 73 (l -> vacio .)
    LLAVE_D         reduce using rule 73 (l -> vacio .)


state 214

    (75) cicloFor -> FOR variable IGUAL expresion UNTIL bloque .

    ID              reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    RETURN          reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    READ            reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    PRINT           reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    IF              reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    WHILE           reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    FOR             reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)
    LLAVE_D         reduce using rule 75 (cicloFor -> FOR variable IGUAL expresion UNTIL bloque .)


state 215

    (38) funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z .

    MAIN            reduce using rule 38 (funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z .)
    LLAVE_D         reduce using rule 38 (funciones -> FUNC f ID PARENTESIS_I param PARENTESIS_D LLAVE_I decVar estatutos LLAVE_D z .)


state 216

    (42) z -> funciones .

    MAIN            reduce using rule 42 (z -> funciones .)
    LLAVE_D         reduce using rule 42 (z -> funciones .)


state 217

    (43) z -> vacio .
    (39) funciones -> vacio .

  ! reduce/reduce conflict for MAIN resolved using rule 39 (funciones -> vacio .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 39 (funciones -> vacio .)
    MAIN            reduce using rule 39 (funciones -> vacio .)
    LLAVE_D         reduce using rule 39 (funciones -> vacio .)

  ! MAIN            [ reduce using rule 43 (z -> vacio .) ]
  ! LLAVE_D         [ reduce using rule 43 (z -> vacio .) ]


state 218

    (95) p -> CORCHETE_I expresion COMA expresion CORCHETE_D .

    POR             reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    ENTRE           reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MAS             reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MENOS           reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MAYOR_QUE       reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MENOR_QUE       reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    NO_IGUAL        reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PUNTO_COMA      reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    COMA            reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PARENTESIS_D    reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    CORCHETE_D      reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    UNTIL           reduce using rule 95 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)


state 219

    (100) q -> COMA expresion q .

    PARENTESIS_D    reduce using rule 100 (q -> COMA expresion q .)


state 220

    (98) p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .

    POR             reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    ENTRE           reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MAS             reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MENOS           reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MENOR_QUE       reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    NO_IGUAL        reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    COMA            reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    CORCHETE_D      reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    UNTIL           reduce using rule 98 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)


state 221

    (102) r -> varcte s .

    PARENTESIS_D    reduce using rule 102 (r -> varcte s .)


state 222

    (104) s -> COMA . varcte s
    (106) varcte -> . CTECHAR
    (107) varcte -> . CTEINT
    (108) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 116
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118

    varcte                         shift and go to state 225

state 223

    (105) s -> vacio .

    PARENTESIS_D    reduce using rule 105 (s -> vacio .)


state 224

    (72) l -> ELSE bloque .

    ID              reduce using rule 72 (l -> ELSE bloque .)
    RETURN          reduce using rule 72 (l -> ELSE bloque .)
    READ            reduce using rule 72 (l -> ELSE bloque .)
    PRINT           reduce using rule 72 (l -> ELSE bloque .)
    IF              reduce using rule 72 (l -> ELSE bloque .)
    WHILE           reduce using rule 72 (l -> ELSE bloque .)
    FOR             reduce using rule 72 (l -> ELSE bloque .)
    LLAVE_D         reduce using rule 72 (l -> ELSE bloque .)


state 225

    (104) s -> COMA varcte . s
    (104) s -> . COMA varcte s
    (105) s -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 222
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    s                              shift and go to state 226
    vacio                          shift and go to state 223

state 226

    (104) s -> COMA varcte s .

    PARENTESIS_D    reduce using rule 104 (s -> COMA varcte s .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 43 resolved using rule (decVar -> vacio)
WARNING: rejected rule (e -> vacio) in state 43
WARNING: reduce/reduce conflict in state 54 resolved using rule (attr -> vacio)
WARNING: rejected rule (decVar -> vacio) in state 54
WARNING: reduce/reduce conflict in state 64 resolved using rule (met -> vacio)
WARNING: rejected rule (funciones -> vacio) in state 64
WARNING: reduce/reduce conflict in state 99 resolved using rule (clases -> vacio)
WARNING: rejected rule (nuevacl -> vacio) in state 99
WARNING: reduce/reduce conflict in state 217 resolved using rule (funciones -> vacio)
WARNING: rejected rule (z -> vacio) in state 217
WARNING: Rule (e -> vacio) is never reduced
WARNING: Rule (nuevacl -> vacio) is never reduced
WARNING: Rule (z -> vacio) is never reduced
