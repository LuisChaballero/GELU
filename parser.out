Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GLOBAL

Grammar

Rule 0     S' -> programa
Rule 1     vacio -> <empty>
Rule 2     programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main
Rule 3     create_symbol_table -> <empty>
Rule 4     program_name -> <empty>
Rule 5     main -> MAIN PARENTESIS_I PARENTESIS_D bloque
Rule 6     bloque -> LLAVE_I estatutos LLAVE_D
Rule 7     estatutos -> estatuto estatutos
Rule 8     estatutos -> vacio
Rule 9     clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase
Rule 10    clases -> vacio
Rule 11    herencia -> MENOR_QUE INHERITS MAYOR_QUE
Rule 12    herencia -> vacio
Rule 13    contenido -> atributos metodos
Rule 14    atributos -> declaracion_variables
Rule 15    atributos -> vacio
Rule 16    metodos -> funciones
Rule 17    metodos -> vacio
Rule 18    nueva_clase -> clases
Rule 19    nueva_clase -> vacio
Rule 20    declaracion_variables -> variables2 PUNTO_COMA declaracion_variables
Rule 21    declaracion_variables -> vacio
Rule 22    variables2 -> VAR tipo_compuesto ID aux1
Rule 23    variables2 -> VAR tipo_simple ID aux2 aux3
Rule 24    aux1 -> COMA ID aux1
Rule 25    aux1 -> vacio
Rule 26    aux2 -> CORCHETE_I CTEINT CORCHETE_D
Rule 27    aux2 -> CORCHETE_I CTEINT COMA CTEINT CORCHETE_D
Rule 28    aux2 -> vacio
Rule 29    aux3 -> COMA ID aux2 aux3
Rule 30    aux3 -> vacio
Rule 31    tipo_simple -> INT
Rule 32    tipo_simple -> FLOAT
Rule 33    tipo_simple -> CHAR
Rule 34    tipo_compuesto -> ID
Rule 35    tipo_compuesto -> DATAFRAME
Rule 36    tipo_compuesto -> FILE
Rule 37    declaracion_funciones -> funciones funciones2
Rule 38    declaracion_funciones -> vacio
Rule 39    funciones -> FUNC funciones_tipo ID
Rule 40    funciones_tipo -> tipo_simple
Rule 41    funciones_tipo -> VOID
Rule 42    funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep
Rule 43    funciones_rep -> funciones funciones2
Rule 44    funciones_rep -> vacio
Rule 45    pop_scope -> <empty>
Rule 46    param -> tipo_simple ID g
Rule 47    param -> vacio
Rule 48    g -> COMA param
Rule 49    g -> vacio
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> llamada_void
Rule 52    estatuto -> retorno
Rule 53    estatuto -> lectura
Rule 54    estatuto -> escritura
Rule 55    estatuto -> condicion
Rule 56    estatuto -> ciclo_while
Rule 57    estatuto -> ciclo_for
Rule 58    variable -> ID h
Rule 59    h -> CORCHETE_I expresion CORCHETE_D
Rule 60    h -> CORCHETE_I expresion COMA expresion CORCHETE_D
Rule 61    h -> vacio
Rule 62    asignacion -> variable IGUAL expresion PUNTO_COMA
Rule 63    llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D
Rule 64    I -> COMA expresion I
Rule 65    I -> vacio
Rule 66    lectura -> READ variable
Rule 67    retorno -> RETURN expresion PUNTO_COMA
Rule 68    escritura -> PRINT PARENTESIS_I j
Rule 69    j -> CTESTRING k
Rule 70    j -> expresion k
Rule 71    k -> COMA j
Rule 72    k -> PARENTESIS_D PUNTO_COMA
Rule 73    condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l
Rule 74    l -> ELSE bloque
Rule 75    l -> vacio
Rule 76    ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque
Rule 77    ciclo_for -> FOR variable IGUAL expresion UNTIL bloque
Rule 78    expresion -> exp m
Rule 79    m -> MAYOR_QUE exp
Rule 80    m -> MENOR_QUE exp
Rule 81    m -> NO_IGUAL exp
Rule 82    m -> vacio
Rule 83    exp -> termino n
Rule 84    n -> MAS exp
Rule 85    n -> MENOS exp
Rule 86    n -> vacio
Rule 87    termino -> factor o
Rule 88    o -> POR termino
Rule 89    o -> ENTRE termino
Rule 90    o -> vacio
Rule 91    factor -> varcte
Rule 92    factor -> ID p
Rule 93    factor -> PARENTESIS_I expresion PARENTESIS_D
Rule 94    factor -> MAS varcte
Rule 95    factor -> MENOS varcte
Rule 96    p -> CORCHETE_I expresion CORCHETE_D
Rule 97    p -> CORCHETE_I expresion COMA expresion CORCHETE_D
Rule 98    p -> PARENTESIS_I expresion q PARENTESIS_D
Rule 99    p -> PUNTO ID
Rule 100   p -> PUNTO ID PARENTESIS_I r PARENTESIS_D
Rule 101   p -> vacio
Rule 102   q -> COMA expresion q
Rule 103   q -> vacio
Rule 104   r -> varcte s
Rule 105   r -> vacio
Rule 106   s -> COMA varcte s
Rule 107   s -> vacio
Rule 108   varcte -> CTECHAR
Rule 109   varcte -> CTEINT
Rule 110   varcte -> CTEFLOAT

Terminals, with rules where they appear

CHAR                 : 33
CLASS                : 9
COMA                 : 24 27 29 48 60 64 71 97 102 106
CORCHETE_D           : 26 27 59 60 96 97
CORCHETE_I           : 26 27 59 60 96 97
CTECHAR              : 108
CTEFLOAT             : 110
CTEINT               : 26 27 27 109
CTESTRING            : 69
DATAFRAME            : 35
ELSE                 : 74
ENTRE                : 89
FILE                 : 36
FLOAT                : 32
FOR                  : 77
FUNC                 : 39
GLOBAL               : 
ID                   : 2 9 22 23 24 29 34 39 46 58 63 92 99 100
IF                   : 73
IGUAL                : 62 77
INHERITS             : 11
INT                  : 31
LLAVE_D              : 6 9 42
LLAVE_I              : 6 9 42
MAIN                 : 5
MAS                  : 84 94
MAYOR_QUE            : 11 79
MENOR_QUE            : 11 80
MENOS                : 85 95
NO_IGUAL             : 81
PARENTESIS_D         : 5 42 63 72 73 76 93 98 100
PARENTESIS_I         : 5 42 63 68 73 76 93 98 100
POR                  : 88
PRINT                : 68
PROGRAM              : 2
PUNTO                : 99 100
PUNTO_COMA           : 2 9 20 62 67 72
READ                 : 66
RETURN               : 67
UNTIL                : 77
VAR                  : 22 23
VOID                 : 41
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

I                    : 63 64
asignacion           : 50
atributos            : 13
aux1                 : 22 24
aux2                 : 23 29
aux3                 : 23 29
bloque               : 5 73 74 76 77
ciclo_for            : 57
ciclo_while          : 56
clases               : 2 18
condicion            : 55
contenido            : 9
create_symbol_table  : 2
declaracion_funciones : 2
declaracion_variables : 2 14 20 42
escritura            : 54
estatuto             : 7
estatutos            : 6 7 42
exp                  : 78 79 80 81 84 85
expresion            : 59 60 60 62 63 64 67 70 73 76 77 93 96 97 97 98 102
factor               : 87
funciones            : 16 37 43
funciones2           : 37 43
funciones_rep        : 42
funciones_tipo       : 39
g                    : 46
h                    : 58
herencia             : 9
j                    : 68 71
k                    : 69 70
l                    : 73
lectura              : 53
llamada_void         : 51
m                    : 78
main                 : 2
metodos              : 13
n                    : 83
nueva_clase          : 9
o                    : 87
p                    : 92
param                : 42 48
pop_scope            : 42
program_name         : 2
programa             : 0
q                    : 98 102
r                    : 100
retorno              : 52
s                    : 104 106
termino              : 83 88 89
tipo_compuesto       : 22
tipo_simple          : 23 40 46
vacio                : 8 10 12 15 17 19 21 25 28 30 38 44 47 49 61 65 75 82 86 90 101 103 105 107
varcte               : 91 94 95 104 106
variable             : 62 66 77
variables2           : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (2) programa -> . PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> PROGRAM . create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main
    (3) create_symbol_table -> .

    ID              reduce using rule 3 (create_symbol_table -> .)

    create_symbol_table            shift and go to state 3

state 3

    (2) programa -> PROGRAM create_symbol_table . ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main

    ID              shift and go to state 4


state 4

    (2) programa -> PROGRAM create_symbol_table ID . program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main
    (4) program_name -> .

    PUNTO_COMA      reduce using rule 4 (program_name -> .)

    program_name                   shift and go to state 5

state 5

    (2) programa -> PROGRAM create_symbol_table ID program_name . PUNTO_COMA clases declaracion_variables declaracion_funciones main

    PUNTO_COMA      shift and go to state 6


state 6

    (2) programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA . clases declaracion_variables declaracion_funciones main
    (9) clases -> . CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase
    (10) clases -> . vacio
    (1) vacio -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 1 (vacio -> .)
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    clases                         shift and go to state 7
    vacio                          shift and go to state 9

state 7

    (2) programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases . declaracion_variables declaracion_funciones main
    (20) declaracion_variables -> . variables2 PUNTO_COMA declaracion_variables
    (21) declaracion_variables -> . vacio
    (22) variables2 -> . VAR tipo_compuesto ID aux1
    (23) variables2 -> . VAR tipo_simple ID aux2 aux3
    (1) vacio -> .

    VAR             shift and go to state 13
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    declaracion_variables          shift and go to state 10
    variables2                     shift and go to state 11
    vacio                          shift and go to state 12

state 8

    (9) clases -> CLASS . ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase

    ID              shift and go to state 14


state 9

    (10) clases -> vacio .

    VAR             reduce using rule 10 (clases -> vacio .)
    FUNC            reduce using rule 10 (clases -> vacio .)
    MAIN            reduce using rule 10 (clases -> vacio .)


state 10

    (2) programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables . declaracion_funciones main
    (37) declaracion_funciones -> . funciones funciones2
    (38) declaracion_funciones -> . vacio
    (39) funciones -> . FUNC funciones_tipo ID
    (1) vacio -> .

    FUNC            shift and go to state 18
    MAIN            reduce using rule 1 (vacio -> .)

    declaracion_funciones          shift and go to state 15
    funciones                      shift and go to state 16
    vacio                          shift and go to state 17

state 11

    (20) declaracion_variables -> variables2 . PUNTO_COMA declaracion_variables

    PUNTO_COMA      shift and go to state 19


state 12

    (21) declaracion_variables -> vacio .

    FUNC            reduce using rule 21 (declaracion_variables -> vacio .)
    MAIN            reduce using rule 21 (declaracion_variables -> vacio .)
    LLAVE_D         reduce using rule 21 (declaracion_variables -> vacio .)
    ID              reduce using rule 21 (declaracion_variables -> vacio .)
    RETURN          reduce using rule 21 (declaracion_variables -> vacio .)
    READ            reduce using rule 21 (declaracion_variables -> vacio .)
    PRINT           reduce using rule 21 (declaracion_variables -> vacio .)
    IF              reduce using rule 21 (declaracion_variables -> vacio .)
    WHILE           reduce using rule 21 (declaracion_variables -> vacio .)
    FOR             reduce using rule 21 (declaracion_variables -> vacio .)


state 13

    (22) variables2 -> VAR . tipo_compuesto ID aux1
    (23) variables2 -> VAR . tipo_simple ID aux2 aux3
    (34) tipo_compuesto -> . ID
    (35) tipo_compuesto -> . DATAFRAME
    (36) tipo_compuesto -> . FILE
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    ID              shift and go to state 21
    DATAFRAME       shift and go to state 23
    FILE            shift and go to state 24
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    tipo_compuesto                 shift and go to state 20
    tipo_simple                    shift and go to state 22

state 14

    (9) clases -> CLASS ID . herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase
    (11) herencia -> . MENOR_QUE INHERITS MAYOR_QUE
    (12) herencia -> . vacio
    (1) vacio -> .

    MENOR_QUE       shift and go to state 29
    LLAVE_I         reduce using rule 1 (vacio -> .)

    herencia                       shift and go to state 28
    vacio                          shift and go to state 30

state 15

    (2) programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones . main
    (5) main -> . MAIN PARENTESIS_I PARENTESIS_D bloque

    MAIN            shift and go to state 32

    main                           shift and go to state 31

state 16

    (37) declaracion_funciones -> funciones . funciones2
    (42) funciones2 -> . PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep

    PARENTESIS_I    shift and go to state 34

    funciones2                     shift and go to state 33

state 17

    (38) declaracion_funciones -> vacio .

    MAIN            reduce using rule 38 (declaracion_funciones -> vacio .)


state 18

    (39) funciones -> FUNC . funciones_tipo ID
    (40) funciones_tipo -> . tipo_simple
    (41) funciones_tipo -> . VOID
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR

    VOID            shift and go to state 37
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    funciones_tipo                 shift and go to state 35
    tipo_simple                    shift and go to state 36

state 19

    (20) declaracion_variables -> variables2 PUNTO_COMA . declaracion_variables
    (20) declaracion_variables -> . variables2 PUNTO_COMA declaracion_variables
    (21) declaracion_variables -> . vacio
    (22) variables2 -> . VAR tipo_compuesto ID aux1
    (23) variables2 -> . VAR tipo_simple ID aux2 aux3
    (1) vacio -> .

    VAR             shift and go to state 13
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)

    variables2                     shift and go to state 11
    declaracion_variables          shift and go to state 38
    vacio                          shift and go to state 12

state 20

    (22) variables2 -> VAR tipo_compuesto . ID aux1

    ID              shift and go to state 39


state 21

    (34) tipo_compuesto -> ID .

    ID              reduce using rule 34 (tipo_compuesto -> ID .)


state 22

    (23) variables2 -> VAR tipo_simple . ID aux2 aux3

    ID              shift and go to state 40


state 23

    (35) tipo_compuesto -> DATAFRAME .

    ID              reduce using rule 35 (tipo_compuesto -> DATAFRAME .)


state 24

    (36) tipo_compuesto -> FILE .

    ID              reduce using rule 36 (tipo_compuesto -> FILE .)


state 25

    (31) tipo_simple -> INT .

    ID              reduce using rule 31 (tipo_simple -> INT .)


state 26

    (32) tipo_simple -> FLOAT .

    ID              reduce using rule 32 (tipo_simple -> FLOAT .)


state 27

    (33) tipo_simple -> CHAR .

    ID              reduce using rule 33 (tipo_simple -> CHAR .)


state 28

    (9) clases -> CLASS ID herencia . LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase

    LLAVE_I         shift and go to state 41


state 29

    (11) herencia -> MENOR_QUE . INHERITS MAYOR_QUE

    INHERITS        shift and go to state 42


state 30

    (12) herencia -> vacio .

    LLAVE_I         reduce using rule 12 (herencia -> vacio .)


state 31

    (2) programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main .

    $end            reduce using rule 2 (programa -> PROGRAM create_symbol_table ID program_name PUNTO_COMA clases declaracion_variables declaracion_funciones main .)


state 32

    (5) main -> MAIN . PARENTESIS_I PARENTESIS_D bloque

    PARENTESIS_I    shift and go to state 43


state 33

    (37) declaracion_funciones -> funciones funciones2 .

    MAIN            reduce using rule 37 (declaracion_funciones -> funciones funciones2 .)


state 34

    (42) funciones2 -> PARENTESIS_I . param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep
    (46) param -> . tipo_simple ID g
    (47) param -> . vacio
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR
    (1) vacio -> .

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    param                          shift and go to state 44
    tipo_simple                    shift and go to state 45
    vacio                          shift and go to state 46

state 35

    (39) funciones -> FUNC funciones_tipo . ID

    ID              shift and go to state 47


state 36

    (40) funciones_tipo -> tipo_simple .

    ID              reduce using rule 40 (funciones_tipo -> tipo_simple .)


state 37

    (41) funciones_tipo -> VOID .

    ID              reduce using rule 41 (funciones_tipo -> VOID .)


state 38

    (20) declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .

    FUNC            reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    MAIN            reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    LLAVE_D         reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    ID              reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    RETURN          reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    READ            reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    PRINT           reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    IF              reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    WHILE           reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)
    FOR             reduce using rule 20 (declaracion_variables -> variables2 PUNTO_COMA declaracion_variables .)


state 39

    (22) variables2 -> VAR tipo_compuesto ID . aux1
    (24) aux1 -> . COMA ID aux1
    (25) aux1 -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux1                           shift and go to state 48
    vacio                          shift and go to state 50

state 40

    (23) variables2 -> VAR tipo_simple ID . aux2 aux3
    (26) aux2 -> . CORCHETE_I CTEINT CORCHETE_D
    (27) aux2 -> . CORCHETE_I CTEINT COMA CTEINT CORCHETE_D
    (28) aux2 -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 52
    COMA            reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux2                           shift and go to state 51
    vacio                          shift and go to state 53

state 41

    (9) clases -> CLASS ID herencia LLAVE_I . contenido LLAVE_D PUNTO_COMA nueva_clase
    (13) contenido -> . atributos metodos
    (14) atributos -> . declaracion_variables
    (15) atributos -> . vacio
    (20) declaracion_variables -> . variables2 PUNTO_COMA declaracion_variables
    (21) declaracion_variables -> . vacio
    (1) vacio -> .
    (22) variables2 -> . VAR tipo_compuesto ID aux1
    (23) variables2 -> . VAR tipo_simple ID aux2 aux3

    FUNC            reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)
    VAR             shift and go to state 13

    contenido                      shift and go to state 54
    atributos                      shift and go to state 55
    declaracion_variables          shift and go to state 56
    vacio                          shift and go to state 57
    variables2                     shift and go to state 11

state 42

    (11) herencia -> MENOR_QUE INHERITS . MAYOR_QUE

    MAYOR_QUE       shift and go to state 58


state 43

    (5) main -> MAIN PARENTESIS_I . PARENTESIS_D bloque

    PARENTESIS_D    shift and go to state 59


state 44

    (42) funciones2 -> PARENTESIS_I param . PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep

    PARENTESIS_D    shift and go to state 60


state 45

    (46) param -> tipo_simple . ID g

    ID              shift and go to state 61


state 46

    (47) param -> vacio .

    PARENTESIS_D    reduce using rule 47 (param -> vacio .)


state 47

    (39) funciones -> FUNC funciones_tipo ID .

    PARENTESIS_I    reduce using rule 39 (funciones -> FUNC funciones_tipo ID .)
    LLAVE_D         reduce using rule 39 (funciones -> FUNC funciones_tipo ID .)


state 48

    (22) variables2 -> VAR tipo_compuesto ID aux1 .

    PUNTO_COMA      reduce using rule 22 (variables2 -> VAR tipo_compuesto ID aux1 .)


state 49

    (24) aux1 -> COMA . ID aux1

    ID              shift and go to state 62


state 50

    (25) aux1 -> vacio .

    PUNTO_COMA      reduce using rule 25 (aux1 -> vacio .)


state 51

    (23) variables2 -> VAR tipo_simple ID aux2 . aux3
    (29) aux3 -> . COMA ID aux2 aux3
    (30) aux3 -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 64
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux3                           shift and go to state 63
    vacio                          shift and go to state 65

state 52

    (26) aux2 -> CORCHETE_I . CTEINT CORCHETE_D
    (27) aux2 -> CORCHETE_I . CTEINT COMA CTEINT CORCHETE_D

    CTEINT          shift and go to state 66


state 53

    (28) aux2 -> vacio .

    COMA            reduce using rule 28 (aux2 -> vacio .)
    PUNTO_COMA      reduce using rule 28 (aux2 -> vacio .)


state 54

    (9) clases -> CLASS ID herencia LLAVE_I contenido . LLAVE_D PUNTO_COMA nueva_clase

    LLAVE_D         shift and go to state 67


state 55

    (13) contenido -> atributos . metodos
    (16) metodos -> . funciones
    (17) metodos -> . vacio
    (39) funciones -> . FUNC funciones_tipo ID
    (1) vacio -> .

    FUNC            shift and go to state 18
    LLAVE_D         reduce using rule 1 (vacio -> .)

    metodos                        shift and go to state 68
    funciones                      shift and go to state 69
    vacio                          shift and go to state 70

state 56

    (14) atributos -> declaracion_variables .

    FUNC            reduce using rule 14 (atributos -> declaracion_variables .)
    LLAVE_D         reduce using rule 14 (atributos -> declaracion_variables .)


state 57

    (15) atributos -> vacio .
    (21) declaracion_variables -> vacio .

  ! reduce/reduce conflict for FUNC resolved using rule 15 (atributos -> vacio .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 15 (atributos -> vacio .)
    FUNC            reduce using rule 15 (atributos -> vacio .)
    LLAVE_D         reduce using rule 15 (atributos -> vacio .)

  ! FUNC            [ reduce using rule 21 (declaracion_variables -> vacio .) ]
  ! LLAVE_D         [ reduce using rule 21 (declaracion_variables -> vacio .) ]


state 58

    (11) herencia -> MENOR_QUE INHERITS MAYOR_QUE .

    LLAVE_I         reduce using rule 11 (herencia -> MENOR_QUE INHERITS MAYOR_QUE .)


state 59

    (5) main -> MAIN PARENTESIS_I PARENTESIS_D . bloque
    (6) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 72

    bloque                         shift and go to state 71

state 60

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D . LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep

    LLAVE_I         shift and go to state 73


state 61

    (46) param -> tipo_simple ID . g
    (48) g -> . COMA param
    (49) g -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 75
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    g                              shift and go to state 74
    vacio                          shift and go to state 76

state 62

    (24) aux1 -> COMA ID . aux1
    (24) aux1 -> . COMA ID aux1
    (25) aux1 -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux1                           shift and go to state 77
    vacio                          shift and go to state 50

state 63

    (23) variables2 -> VAR tipo_simple ID aux2 aux3 .

    PUNTO_COMA      reduce using rule 23 (variables2 -> VAR tipo_simple ID aux2 aux3 .)


state 64

    (29) aux3 -> COMA . ID aux2 aux3

    ID              shift and go to state 78


state 65

    (30) aux3 -> vacio .

    PUNTO_COMA      reduce using rule 30 (aux3 -> vacio .)


state 66

    (26) aux2 -> CORCHETE_I CTEINT . CORCHETE_D
    (27) aux2 -> CORCHETE_I CTEINT . COMA CTEINT CORCHETE_D

    CORCHETE_D      shift and go to state 79
    COMA            shift and go to state 80


state 67

    (9) clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D . PUNTO_COMA nueva_clase

    PUNTO_COMA      shift and go to state 81


state 68

    (13) contenido -> atributos metodos .

    LLAVE_D         reduce using rule 13 (contenido -> atributos metodos .)


state 69

    (16) metodos -> funciones .

    LLAVE_D         reduce using rule 16 (metodos -> funciones .)


state 70

    (17) metodos -> vacio .

    LLAVE_D         reduce using rule 17 (metodos -> vacio .)


state 71

    (5) main -> MAIN PARENTESIS_I PARENTESIS_D bloque .

    $end            reduce using rule 5 (main -> MAIN PARENTESIS_I PARENTESIS_D bloque .)


state 72

    (6) bloque -> LLAVE_I . estatutos LLAVE_D
    (7) estatutos -> . estatuto estatutos
    (8) estatutos -> . vacio
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada_void
    (52) estatuto -> . retorno
    (53) estatuto -> . lectura
    (54) estatuto -> . escritura
    (55) estatuto -> . condicion
    (56) estatuto -> . ciclo_while
    (57) estatuto -> . ciclo_for
    (1) vacio -> .
    (62) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (63) llamada_void -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (67) retorno -> . RETURN expresion PUNTO_COMA
    (66) lectura -> . READ variable
    (68) escritura -> . PRINT PARENTESIS_I j
    (73) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (76) ciclo_while -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (77) ciclo_for -> . FOR variable IGUAL expresion UNTIL bloque
    (58) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 94
    RETURN          shift and go to state 95
    READ            shift and go to state 96
    PRINT           shift and go to state 97
    IF              shift and go to state 98
    WHILE           shift and go to state 99
    FOR             shift and go to state 100

    estatutos                      shift and go to state 82
    estatuto                       shift and go to state 83
    vacio                          shift and go to state 84
    asignacion                     shift and go to state 85
    llamada_void                   shift and go to state 86
    retorno                        shift and go to state 87
    lectura                        shift and go to state 88
    escritura                      shift and go to state 89
    condicion                      shift and go to state 90
    ciclo_while                    shift and go to state 91
    ciclo_for                      shift and go to state 92
    variable                       shift and go to state 93

state 73

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I . declaracion_variables estatutos LLAVE_D pop_scope funciones_rep
    (20) declaracion_variables -> . variables2 PUNTO_COMA declaracion_variables
    (21) declaracion_variables -> . vacio
    (22) variables2 -> . VAR tipo_compuesto ID aux1
    (23) variables2 -> . VAR tipo_simple ID aux2 aux3
    (1) vacio -> .

    VAR             shift and go to state 13
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    declaracion_variables          shift and go to state 101
    variables2                     shift and go to state 11
    vacio                          shift and go to state 12

state 74

    (46) param -> tipo_simple ID g .

    PARENTESIS_D    reduce using rule 46 (param -> tipo_simple ID g .)


state 75

    (48) g -> COMA . param
    (46) param -> . tipo_simple ID g
    (47) param -> . vacio
    (31) tipo_simple -> . INT
    (32) tipo_simple -> . FLOAT
    (33) tipo_simple -> . CHAR
    (1) vacio -> .

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    param                          shift and go to state 102
    tipo_simple                    shift and go to state 45
    vacio                          shift and go to state 46

state 76

    (49) g -> vacio .

    PARENTESIS_D    reduce using rule 49 (g -> vacio .)


state 77

    (24) aux1 -> COMA ID aux1 .

    PUNTO_COMA      reduce using rule 24 (aux1 -> COMA ID aux1 .)


state 78

    (29) aux3 -> COMA ID . aux2 aux3
    (26) aux2 -> . CORCHETE_I CTEINT CORCHETE_D
    (27) aux2 -> . CORCHETE_I CTEINT COMA CTEINT CORCHETE_D
    (28) aux2 -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 52
    COMA            reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux2                           shift and go to state 103
    vacio                          shift and go to state 53

state 79

    (26) aux2 -> CORCHETE_I CTEINT CORCHETE_D .

    COMA            reduce using rule 26 (aux2 -> CORCHETE_I CTEINT CORCHETE_D .)
    PUNTO_COMA      reduce using rule 26 (aux2 -> CORCHETE_I CTEINT CORCHETE_D .)


state 80

    (27) aux2 -> CORCHETE_I CTEINT COMA . CTEINT CORCHETE_D

    CTEINT          shift and go to state 104


state 81

    (9) clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA . nueva_clase
    (18) nueva_clase -> . clases
    (19) nueva_clase -> . vacio
    (9) clases -> . CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase
    (10) clases -> . vacio
    (1) vacio -> .

    CLASS           shift and go to state 8
    VAR             reduce using rule 1 (vacio -> .)
    FUNC            reduce using rule 1 (vacio -> .)
    MAIN            reduce using rule 1 (vacio -> .)

    nueva_clase                    shift and go to state 105
    clases                         shift and go to state 106
    vacio                          shift and go to state 107

state 82

    (6) bloque -> LLAVE_I estatutos . LLAVE_D

    LLAVE_D         shift and go to state 108


state 83

    (7) estatutos -> estatuto . estatutos
    (7) estatutos -> . estatuto estatutos
    (8) estatutos -> . vacio
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada_void
    (52) estatuto -> . retorno
    (53) estatuto -> . lectura
    (54) estatuto -> . escritura
    (55) estatuto -> . condicion
    (56) estatuto -> . ciclo_while
    (57) estatuto -> . ciclo_for
    (1) vacio -> .
    (62) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (63) llamada_void -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (67) retorno -> . RETURN expresion PUNTO_COMA
    (66) lectura -> . READ variable
    (68) escritura -> . PRINT PARENTESIS_I j
    (73) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (76) ciclo_while -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (77) ciclo_for -> . FOR variable IGUAL expresion UNTIL bloque
    (58) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 94
    RETURN          shift and go to state 95
    READ            shift and go to state 96
    PRINT           shift and go to state 97
    IF              shift and go to state 98
    WHILE           shift and go to state 99
    FOR             shift and go to state 100

    estatuto                       shift and go to state 83
    estatutos                      shift and go to state 109
    vacio                          shift and go to state 84
    asignacion                     shift and go to state 85
    llamada_void                   shift and go to state 86
    retorno                        shift and go to state 87
    lectura                        shift and go to state 88
    escritura                      shift and go to state 89
    condicion                      shift and go to state 90
    ciclo_while                    shift and go to state 91
    ciclo_for                      shift and go to state 92
    variable                       shift and go to state 93

state 84

    (8) estatutos -> vacio .

    LLAVE_D         reduce using rule 8 (estatutos -> vacio .)


state 85

    (50) estatuto -> asignacion .

    ID              reduce using rule 50 (estatuto -> asignacion .)
    RETURN          reduce using rule 50 (estatuto -> asignacion .)
    READ            reduce using rule 50 (estatuto -> asignacion .)
    PRINT           reduce using rule 50 (estatuto -> asignacion .)
    IF              reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    FOR             reduce using rule 50 (estatuto -> asignacion .)
    LLAVE_D         reduce using rule 50 (estatuto -> asignacion .)


state 86

    (51) estatuto -> llamada_void .

    ID              reduce using rule 51 (estatuto -> llamada_void .)
    RETURN          reduce using rule 51 (estatuto -> llamada_void .)
    READ            reduce using rule 51 (estatuto -> llamada_void .)
    PRINT           reduce using rule 51 (estatuto -> llamada_void .)
    IF              reduce using rule 51 (estatuto -> llamada_void .)
    WHILE           reduce using rule 51 (estatuto -> llamada_void .)
    FOR             reduce using rule 51 (estatuto -> llamada_void .)
    LLAVE_D         reduce using rule 51 (estatuto -> llamada_void .)


state 87

    (52) estatuto -> retorno .

    ID              reduce using rule 52 (estatuto -> retorno .)
    RETURN          reduce using rule 52 (estatuto -> retorno .)
    READ            reduce using rule 52 (estatuto -> retorno .)
    PRINT           reduce using rule 52 (estatuto -> retorno .)
    IF              reduce using rule 52 (estatuto -> retorno .)
    WHILE           reduce using rule 52 (estatuto -> retorno .)
    FOR             reduce using rule 52 (estatuto -> retorno .)
    LLAVE_D         reduce using rule 52 (estatuto -> retorno .)


state 88

    (53) estatuto -> lectura .

    ID              reduce using rule 53 (estatuto -> lectura .)
    RETURN          reduce using rule 53 (estatuto -> lectura .)
    READ            reduce using rule 53 (estatuto -> lectura .)
    PRINT           reduce using rule 53 (estatuto -> lectura .)
    IF              reduce using rule 53 (estatuto -> lectura .)
    WHILE           reduce using rule 53 (estatuto -> lectura .)
    FOR             reduce using rule 53 (estatuto -> lectura .)
    LLAVE_D         reduce using rule 53 (estatuto -> lectura .)


state 89

    (54) estatuto -> escritura .

    ID              reduce using rule 54 (estatuto -> escritura .)
    RETURN          reduce using rule 54 (estatuto -> escritura .)
    READ            reduce using rule 54 (estatuto -> escritura .)
    PRINT           reduce using rule 54 (estatuto -> escritura .)
    IF              reduce using rule 54 (estatuto -> escritura .)
    WHILE           reduce using rule 54 (estatuto -> escritura .)
    FOR             reduce using rule 54 (estatuto -> escritura .)
    LLAVE_D         reduce using rule 54 (estatuto -> escritura .)


state 90

    (55) estatuto -> condicion .

    ID              reduce using rule 55 (estatuto -> condicion .)
    RETURN          reduce using rule 55 (estatuto -> condicion .)
    READ            reduce using rule 55 (estatuto -> condicion .)
    PRINT           reduce using rule 55 (estatuto -> condicion .)
    IF              reduce using rule 55 (estatuto -> condicion .)
    WHILE           reduce using rule 55 (estatuto -> condicion .)
    FOR             reduce using rule 55 (estatuto -> condicion .)
    LLAVE_D         reduce using rule 55 (estatuto -> condicion .)


state 91

    (56) estatuto -> ciclo_while .

    ID              reduce using rule 56 (estatuto -> ciclo_while .)
    RETURN          reduce using rule 56 (estatuto -> ciclo_while .)
    READ            reduce using rule 56 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 56 (estatuto -> ciclo_while .)
    IF              reduce using rule 56 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_while .)
    FOR             reduce using rule 56 (estatuto -> ciclo_while .)
    LLAVE_D         reduce using rule 56 (estatuto -> ciclo_while .)


state 92

    (57) estatuto -> ciclo_for .

    ID              reduce using rule 57 (estatuto -> ciclo_for .)
    RETURN          reduce using rule 57 (estatuto -> ciclo_for .)
    READ            reduce using rule 57 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 57 (estatuto -> ciclo_for .)
    IF              reduce using rule 57 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 57 (estatuto -> ciclo_for .)
    FOR             reduce using rule 57 (estatuto -> ciclo_for .)
    LLAVE_D         reduce using rule 57 (estatuto -> ciclo_for .)


state 93

    (62) asignacion -> variable . IGUAL expresion PUNTO_COMA

    IGUAL           shift and go to state 110


state 94

    (63) llamada_void -> ID . PARENTESIS_I expresion I PARENTESIS_D
    (58) variable -> ID . h
    (59) h -> . CORCHETE_I expresion CORCHETE_D
    (60) h -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (61) h -> . vacio
    (1) vacio -> .

    PARENTESIS_I    shift and go to state 111
    CORCHETE_I      shift and go to state 113
    IGUAL           reduce using rule 1 (vacio -> .)

    h                              shift and go to state 112
    vacio                          shift and go to state 114

state 95

    (67) retorno -> RETURN . expresion PUNTO_COMA
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 115
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 96

    (66) lectura -> READ . variable
    (58) variable -> . ID h

    ID              shift and go to state 128

    variable                       shift and go to state 127

state 97

    (68) escritura -> PRINT . PARENTESIS_I j

    PARENTESIS_I    shift and go to state 129


state 98

    (73) condicion -> IF . PARENTESIS_I expresion PARENTESIS_D bloque l

    PARENTESIS_I    shift and go to state 130


state 99

    (76) ciclo_while -> WHILE . PARENTESIS_I expresion PARENTESIS_D bloque

    PARENTESIS_I    shift and go to state 131


state 100

    (77) ciclo_for -> FOR . variable IGUAL expresion UNTIL bloque
    (58) variable -> . ID h

    ID              shift and go to state 128

    variable                       shift and go to state 132

state 101

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables . estatutos LLAVE_D pop_scope funciones_rep
    (7) estatutos -> . estatuto estatutos
    (8) estatutos -> . vacio
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada_void
    (52) estatuto -> . retorno
    (53) estatuto -> . lectura
    (54) estatuto -> . escritura
    (55) estatuto -> . condicion
    (56) estatuto -> . ciclo_while
    (57) estatuto -> . ciclo_for
    (1) vacio -> .
    (62) asignacion -> . variable IGUAL expresion PUNTO_COMA
    (63) llamada_void -> . ID PARENTESIS_I expresion I PARENTESIS_D
    (67) retorno -> . RETURN expresion PUNTO_COMA
    (66) lectura -> . READ variable
    (68) escritura -> . PRINT PARENTESIS_I j
    (73) condicion -> . IF PARENTESIS_I expresion PARENTESIS_D bloque l
    (76) ciclo_while -> . WHILE PARENTESIS_I expresion PARENTESIS_D bloque
    (77) ciclo_for -> . FOR variable IGUAL expresion UNTIL bloque
    (58) variable -> . ID h

    LLAVE_D         reduce using rule 1 (vacio -> .)
    ID              shift and go to state 94
    RETURN          shift and go to state 95
    READ            shift and go to state 96
    PRINT           shift and go to state 97
    IF              shift and go to state 98
    WHILE           shift and go to state 99
    FOR             shift and go to state 100

    estatutos                      shift and go to state 133
    estatuto                       shift and go to state 83
    vacio                          shift and go to state 84
    asignacion                     shift and go to state 85
    llamada_void                   shift and go to state 86
    retorno                        shift and go to state 87
    lectura                        shift and go to state 88
    escritura                      shift and go to state 89
    condicion                      shift and go to state 90
    ciclo_while                    shift and go to state 91
    ciclo_for                      shift and go to state 92
    variable                       shift and go to state 93

state 102

    (48) g -> COMA param .

    PARENTESIS_D    reduce using rule 48 (g -> COMA param .)


state 103

    (29) aux3 -> COMA ID aux2 . aux3
    (29) aux3 -> . COMA ID aux2 aux3
    (30) aux3 -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 64
    PUNTO_COMA      reduce using rule 1 (vacio -> .)

    aux3                           shift and go to state 134
    vacio                          shift and go to state 65

state 104

    (27) aux2 -> CORCHETE_I CTEINT COMA CTEINT . CORCHETE_D

    CORCHETE_D      shift and go to state 135


state 105

    (9) clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase .

    VAR             reduce using rule 9 (clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase .)
    FUNC            reduce using rule 9 (clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase .)
    MAIN            reduce using rule 9 (clases -> CLASS ID herencia LLAVE_I contenido LLAVE_D PUNTO_COMA nueva_clase .)


state 106

    (18) nueva_clase -> clases .

    VAR             reduce using rule 18 (nueva_clase -> clases .)
    FUNC            reduce using rule 18 (nueva_clase -> clases .)
    MAIN            reduce using rule 18 (nueva_clase -> clases .)


state 107

    (19) nueva_clase -> vacio .
    (10) clases -> vacio .

  ! reduce/reduce conflict for VAR resolved using rule 10 (clases -> vacio .)
  ! reduce/reduce conflict for FUNC resolved using rule 10 (clases -> vacio .)
  ! reduce/reduce conflict for MAIN resolved using rule 10 (clases -> vacio .)
    VAR             reduce using rule 10 (clases -> vacio .)
    FUNC            reduce using rule 10 (clases -> vacio .)
    MAIN            reduce using rule 10 (clases -> vacio .)

  ! VAR             [ reduce using rule 19 (nueva_clase -> vacio .) ]
  ! FUNC            [ reduce using rule 19 (nueva_clase -> vacio .) ]
  ! MAIN            [ reduce using rule 19 (nueva_clase -> vacio .) ]


state 108

    (6) bloque -> LLAVE_I estatutos LLAVE_D .

    $end            reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    ELSE            reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    ID              reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    RETURN          reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    READ            reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    PRINT           reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    IF              reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    WHILE           reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    FOR             reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)
    LLAVE_D         reduce using rule 6 (bloque -> LLAVE_I estatutos LLAVE_D .)


state 109

    (7) estatutos -> estatuto estatutos .

    LLAVE_D         reduce using rule 7 (estatutos -> estatuto estatutos .)


state 110

    (62) asignacion -> variable IGUAL . expresion PUNTO_COMA
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 136
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 111

    (63) llamada_void -> ID PARENTESIS_I . expresion I PARENTESIS_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 137
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 112

    (58) variable -> ID h .

    IGUAL           reduce using rule 58 (variable -> ID h .)
    ID              reduce using rule 58 (variable -> ID h .)
    RETURN          reduce using rule 58 (variable -> ID h .)
    READ            reduce using rule 58 (variable -> ID h .)
    PRINT           reduce using rule 58 (variable -> ID h .)
    IF              reduce using rule 58 (variable -> ID h .)
    WHILE           reduce using rule 58 (variable -> ID h .)
    FOR             reduce using rule 58 (variable -> ID h .)
    LLAVE_D         reduce using rule 58 (variable -> ID h .)


state 113

    (59) h -> CORCHETE_I . expresion CORCHETE_D
    (60) h -> CORCHETE_I . expresion COMA expresion CORCHETE_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 138
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 114

    (61) h -> vacio .

    IGUAL           reduce using rule 61 (h -> vacio .)
    ID              reduce using rule 61 (h -> vacio .)
    RETURN          reduce using rule 61 (h -> vacio .)
    READ            reduce using rule 61 (h -> vacio .)
    PRINT           reduce using rule 61 (h -> vacio .)
    IF              reduce using rule 61 (h -> vacio .)
    WHILE           reduce using rule 61 (h -> vacio .)
    FOR             reduce using rule 61 (h -> vacio .)
    LLAVE_D         reduce using rule 61 (h -> vacio .)


state 115

    (67) retorno -> RETURN expresion . PUNTO_COMA

    PUNTO_COMA      shift and go to state 139


state 116

    (78) expresion -> exp . m
    (79) m -> . MAYOR_QUE exp
    (80) m -> . MENOR_QUE exp
    (81) m -> . NO_IGUAL exp
    (82) m -> . vacio
    (1) vacio -> .

    MAYOR_QUE       shift and go to state 141
    MENOR_QUE       shift and go to state 142
    NO_IGUAL        shift and go to state 143
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    m                              shift and go to state 140
    vacio                          shift and go to state 144

state 117

    (83) exp -> termino . n
    (84) n -> . MAS exp
    (85) n -> . MENOS exp
    (86) n -> . vacio
    (1) vacio -> .

    MAS             shift and go to state 146
    MENOS           shift and go to state 147
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    n                              shift and go to state 145
    vacio                          shift and go to state 148

state 118

    (87) termino -> factor . o
    (88) o -> . POR termino
    (89) o -> . ENTRE termino
    (90) o -> . vacio
    (1) vacio -> .

    POR             shift and go to state 150
    ENTRE           shift and go to state 151
    MAS             reduce using rule 1 (vacio -> .)
    MENOS           reduce using rule 1 (vacio -> .)
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    o                              shift and go to state 149
    vacio                          shift and go to state 152

state 119

    (91) factor -> varcte .

    POR             reduce using rule 91 (factor -> varcte .)
    ENTRE           reduce using rule 91 (factor -> varcte .)
    MAS             reduce using rule 91 (factor -> varcte .)
    MENOS           reduce using rule 91 (factor -> varcte .)
    MAYOR_QUE       reduce using rule 91 (factor -> varcte .)
    MENOR_QUE       reduce using rule 91 (factor -> varcte .)
    NO_IGUAL        reduce using rule 91 (factor -> varcte .)
    PUNTO_COMA      reduce using rule 91 (factor -> varcte .)
    COMA            reduce using rule 91 (factor -> varcte .)
    PARENTESIS_D    reduce using rule 91 (factor -> varcte .)
    CORCHETE_D      reduce using rule 91 (factor -> varcte .)
    UNTIL           reduce using rule 91 (factor -> varcte .)


state 120

    (92) factor -> ID . p
    (96) p -> . CORCHETE_I expresion CORCHETE_D
    (97) p -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (98) p -> . PARENTESIS_I expresion q PARENTESIS_D
    (99) p -> . PUNTO ID
    (100) p -> . PUNTO ID PARENTESIS_I r PARENTESIS_D
    (101) p -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 154
    PARENTESIS_I    shift and go to state 155
    PUNTO           shift and go to state 156
    POR             reduce using rule 1 (vacio -> .)
    ENTRE           reduce using rule 1 (vacio -> .)
    MAS             reduce using rule 1 (vacio -> .)
    MENOS           reduce using rule 1 (vacio -> .)
    MAYOR_QUE       reduce using rule 1 (vacio -> .)
    MENOR_QUE       reduce using rule 1 (vacio -> .)
    NO_IGUAL        reduce using rule 1 (vacio -> .)
    PUNTO_COMA      reduce using rule 1 (vacio -> .)
    COMA            reduce using rule 1 (vacio -> .)
    PARENTESIS_D    reduce using rule 1 (vacio -> .)
    CORCHETE_D      reduce using rule 1 (vacio -> .)
    UNTIL           reduce using rule 1 (vacio -> .)

    p                              shift and go to state 153
    vacio                          shift and go to state 157

state 121

    (93) factor -> PARENTESIS_I . expresion PARENTESIS_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 158
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 122

    (94) factor -> MAS . varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    varcte                         shift and go to state 159

state 123

    (95) factor -> MENOS . varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    varcte                         shift and go to state 160

state 124

    (108) varcte -> CTECHAR .

    POR             reduce using rule 108 (varcte -> CTECHAR .)
    ENTRE           reduce using rule 108 (varcte -> CTECHAR .)
    MAS             reduce using rule 108 (varcte -> CTECHAR .)
    MENOS           reduce using rule 108 (varcte -> CTECHAR .)
    MAYOR_QUE       reduce using rule 108 (varcte -> CTECHAR .)
    MENOR_QUE       reduce using rule 108 (varcte -> CTECHAR .)
    NO_IGUAL        reduce using rule 108 (varcte -> CTECHAR .)
    PUNTO_COMA      reduce using rule 108 (varcte -> CTECHAR .)
    COMA            reduce using rule 108 (varcte -> CTECHAR .)
    PARENTESIS_D    reduce using rule 108 (varcte -> CTECHAR .)
    CORCHETE_D      reduce using rule 108 (varcte -> CTECHAR .)
    UNTIL           reduce using rule 108 (varcte -> CTECHAR .)


state 125

    (109) varcte -> CTEINT .

    POR             reduce using rule 109 (varcte -> CTEINT .)
    ENTRE           reduce using rule 109 (varcte -> CTEINT .)
    MAS             reduce using rule 109 (varcte -> CTEINT .)
    MENOS           reduce using rule 109 (varcte -> CTEINT .)
    MAYOR_QUE       reduce using rule 109 (varcte -> CTEINT .)
    MENOR_QUE       reduce using rule 109 (varcte -> CTEINT .)
    NO_IGUAL        reduce using rule 109 (varcte -> CTEINT .)
    PUNTO_COMA      reduce using rule 109 (varcte -> CTEINT .)
    COMA            reduce using rule 109 (varcte -> CTEINT .)
    PARENTESIS_D    reduce using rule 109 (varcte -> CTEINT .)
    CORCHETE_D      reduce using rule 109 (varcte -> CTEINT .)
    UNTIL           reduce using rule 109 (varcte -> CTEINT .)


state 126

    (110) varcte -> CTEFLOAT .

    POR             reduce using rule 110 (varcte -> CTEFLOAT .)
    ENTRE           reduce using rule 110 (varcte -> CTEFLOAT .)
    MAS             reduce using rule 110 (varcte -> CTEFLOAT .)
    MENOS           reduce using rule 110 (varcte -> CTEFLOAT .)
    MAYOR_QUE       reduce using rule 110 (varcte -> CTEFLOAT .)
    MENOR_QUE       reduce using rule 110 (varcte -> CTEFLOAT .)
    NO_IGUAL        reduce using rule 110 (varcte -> CTEFLOAT .)
    PUNTO_COMA      reduce using rule 110 (varcte -> CTEFLOAT .)
    COMA            reduce using rule 110 (varcte -> CTEFLOAT .)
    PARENTESIS_D    reduce using rule 110 (varcte -> CTEFLOAT .)
    CORCHETE_D      reduce using rule 110 (varcte -> CTEFLOAT .)
    UNTIL           reduce using rule 110 (varcte -> CTEFLOAT .)


state 127

    (66) lectura -> READ variable .

    ID              reduce using rule 66 (lectura -> READ variable .)
    RETURN          reduce using rule 66 (lectura -> READ variable .)
    READ            reduce using rule 66 (lectura -> READ variable .)
    PRINT           reduce using rule 66 (lectura -> READ variable .)
    IF              reduce using rule 66 (lectura -> READ variable .)
    WHILE           reduce using rule 66 (lectura -> READ variable .)
    FOR             reduce using rule 66 (lectura -> READ variable .)
    LLAVE_D         reduce using rule 66 (lectura -> READ variable .)


state 128

    (58) variable -> ID . h
    (59) h -> . CORCHETE_I expresion CORCHETE_D
    (60) h -> . CORCHETE_I expresion COMA expresion CORCHETE_D
    (61) h -> . vacio
    (1) vacio -> .

    CORCHETE_I      shift and go to state 113
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)
    IGUAL           reduce using rule 1 (vacio -> .)

    h                              shift and go to state 112
    vacio                          shift and go to state 114

state 129

    (68) escritura -> PRINT PARENTESIS_I . j
    (69) j -> . CTESTRING k
    (70) j -> . expresion k
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    CTESTRING       shift and go to state 162
    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    j                              shift and go to state 161
    expresion                      shift and go to state 163
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 130

    (73) condicion -> IF PARENTESIS_I . expresion PARENTESIS_D bloque l
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 164
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 131

    (76) ciclo_while -> WHILE PARENTESIS_I . expresion PARENTESIS_D bloque
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 165
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 132

    (77) ciclo_for -> FOR variable . IGUAL expresion UNTIL bloque

    IGUAL           shift and go to state 166


state 133

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos . LLAVE_D pop_scope funciones_rep

    LLAVE_D         shift and go to state 167


state 134

    (29) aux3 -> COMA ID aux2 aux3 .

    PUNTO_COMA      reduce using rule 29 (aux3 -> COMA ID aux2 aux3 .)


state 135

    (27) aux2 -> CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .

    COMA            reduce using rule 27 (aux2 -> CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .)
    PUNTO_COMA      reduce using rule 27 (aux2 -> CORCHETE_I CTEINT COMA CTEINT CORCHETE_D .)


state 136

    (62) asignacion -> variable IGUAL expresion . PUNTO_COMA

    PUNTO_COMA      shift and go to state 168


state 137

    (63) llamada_void -> ID PARENTESIS_I expresion . I PARENTESIS_D
    (64) I -> . COMA expresion I
    (65) I -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 170
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    I                              shift and go to state 169
    vacio                          shift and go to state 171

state 138

    (59) h -> CORCHETE_I expresion . CORCHETE_D
    (60) h -> CORCHETE_I expresion . COMA expresion CORCHETE_D

    CORCHETE_D      shift and go to state 172
    COMA            shift and go to state 173


state 139

    (67) retorno -> RETURN expresion PUNTO_COMA .

    ID              reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    RETURN          reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    READ            reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    PRINT           reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    IF              reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    WHILE           reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    FOR             reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)
    LLAVE_D         reduce using rule 67 (retorno -> RETURN expresion PUNTO_COMA .)


state 140

    (78) expresion -> exp m .

    PUNTO_COMA      reduce using rule 78 (expresion -> exp m .)
    COMA            reduce using rule 78 (expresion -> exp m .)
    PARENTESIS_D    reduce using rule 78 (expresion -> exp m .)
    CORCHETE_D      reduce using rule 78 (expresion -> exp m .)
    UNTIL           reduce using rule 78 (expresion -> exp m .)


state 141

    (79) m -> MAYOR_QUE . exp
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    exp                            shift and go to state 174
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 142

    (80) m -> MENOR_QUE . exp
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    exp                            shift and go to state 175
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 143

    (81) m -> NO_IGUAL . exp
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    exp                            shift and go to state 176
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 144

    (82) m -> vacio .

    PUNTO_COMA      reduce using rule 82 (m -> vacio .)
    COMA            reduce using rule 82 (m -> vacio .)
    PARENTESIS_D    reduce using rule 82 (m -> vacio .)
    CORCHETE_D      reduce using rule 82 (m -> vacio .)
    UNTIL           reduce using rule 82 (m -> vacio .)


state 145

    (83) exp -> termino n .

    MAYOR_QUE       reduce using rule 83 (exp -> termino n .)
    MENOR_QUE       reduce using rule 83 (exp -> termino n .)
    NO_IGUAL        reduce using rule 83 (exp -> termino n .)
    PUNTO_COMA      reduce using rule 83 (exp -> termino n .)
    COMA            reduce using rule 83 (exp -> termino n .)
    PARENTESIS_D    reduce using rule 83 (exp -> termino n .)
    CORCHETE_D      reduce using rule 83 (exp -> termino n .)
    UNTIL           reduce using rule 83 (exp -> termino n .)


state 146

    (84) n -> MAS . exp
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    exp                            shift and go to state 177
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 147

    (85) n -> MENOS . exp
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    exp                            shift and go to state 178
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 148

    (86) n -> vacio .

    MAYOR_QUE       reduce using rule 86 (n -> vacio .)
    MENOR_QUE       reduce using rule 86 (n -> vacio .)
    NO_IGUAL        reduce using rule 86 (n -> vacio .)
    PUNTO_COMA      reduce using rule 86 (n -> vacio .)
    COMA            reduce using rule 86 (n -> vacio .)
    PARENTESIS_D    reduce using rule 86 (n -> vacio .)
    CORCHETE_D      reduce using rule 86 (n -> vacio .)
    UNTIL           reduce using rule 86 (n -> vacio .)


state 149

    (87) termino -> factor o .

    MAS             reduce using rule 87 (termino -> factor o .)
    MENOS           reduce using rule 87 (termino -> factor o .)
    MAYOR_QUE       reduce using rule 87 (termino -> factor o .)
    MENOR_QUE       reduce using rule 87 (termino -> factor o .)
    NO_IGUAL        reduce using rule 87 (termino -> factor o .)
    PUNTO_COMA      reduce using rule 87 (termino -> factor o .)
    COMA            reduce using rule 87 (termino -> factor o .)
    PARENTESIS_D    reduce using rule 87 (termino -> factor o .)
    CORCHETE_D      reduce using rule 87 (termino -> factor o .)
    UNTIL           reduce using rule 87 (termino -> factor o .)


state 150

    (88) o -> POR . termino
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    termino                        shift and go to state 179
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 151

    (89) o -> ENTRE . termino
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    termino                        shift and go to state 180
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 152

    (90) o -> vacio .

    MAS             reduce using rule 90 (o -> vacio .)
    MENOS           reduce using rule 90 (o -> vacio .)
    MAYOR_QUE       reduce using rule 90 (o -> vacio .)
    MENOR_QUE       reduce using rule 90 (o -> vacio .)
    NO_IGUAL        reduce using rule 90 (o -> vacio .)
    PUNTO_COMA      reduce using rule 90 (o -> vacio .)
    COMA            reduce using rule 90 (o -> vacio .)
    PARENTESIS_D    reduce using rule 90 (o -> vacio .)
    CORCHETE_D      reduce using rule 90 (o -> vacio .)
    UNTIL           reduce using rule 90 (o -> vacio .)


state 153

    (92) factor -> ID p .

    POR             reduce using rule 92 (factor -> ID p .)
    ENTRE           reduce using rule 92 (factor -> ID p .)
    MAS             reduce using rule 92 (factor -> ID p .)
    MENOS           reduce using rule 92 (factor -> ID p .)
    MAYOR_QUE       reduce using rule 92 (factor -> ID p .)
    MENOR_QUE       reduce using rule 92 (factor -> ID p .)
    NO_IGUAL        reduce using rule 92 (factor -> ID p .)
    PUNTO_COMA      reduce using rule 92 (factor -> ID p .)
    COMA            reduce using rule 92 (factor -> ID p .)
    PARENTESIS_D    reduce using rule 92 (factor -> ID p .)
    CORCHETE_D      reduce using rule 92 (factor -> ID p .)
    UNTIL           reduce using rule 92 (factor -> ID p .)


state 154

    (96) p -> CORCHETE_I . expresion CORCHETE_D
    (97) p -> CORCHETE_I . expresion COMA expresion CORCHETE_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 181
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 155

    (98) p -> PARENTESIS_I . expresion q PARENTESIS_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 182
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 156

    (99) p -> PUNTO . ID
    (100) p -> PUNTO . ID PARENTESIS_I r PARENTESIS_D

    ID              shift and go to state 183


state 157

    (101) p -> vacio .

    POR             reduce using rule 101 (p -> vacio .)
    ENTRE           reduce using rule 101 (p -> vacio .)
    MAS             reduce using rule 101 (p -> vacio .)
    MENOS           reduce using rule 101 (p -> vacio .)
    MAYOR_QUE       reduce using rule 101 (p -> vacio .)
    MENOR_QUE       reduce using rule 101 (p -> vacio .)
    NO_IGUAL        reduce using rule 101 (p -> vacio .)
    PUNTO_COMA      reduce using rule 101 (p -> vacio .)
    COMA            reduce using rule 101 (p -> vacio .)
    PARENTESIS_D    reduce using rule 101 (p -> vacio .)
    CORCHETE_D      reduce using rule 101 (p -> vacio .)
    UNTIL           reduce using rule 101 (p -> vacio .)


state 158

    (93) factor -> PARENTESIS_I expresion . PARENTESIS_D

    PARENTESIS_D    shift and go to state 184


state 159

    (94) factor -> MAS varcte .

    POR             reduce using rule 94 (factor -> MAS varcte .)
    ENTRE           reduce using rule 94 (factor -> MAS varcte .)
    MAS             reduce using rule 94 (factor -> MAS varcte .)
    MENOS           reduce using rule 94 (factor -> MAS varcte .)
    MAYOR_QUE       reduce using rule 94 (factor -> MAS varcte .)
    MENOR_QUE       reduce using rule 94 (factor -> MAS varcte .)
    NO_IGUAL        reduce using rule 94 (factor -> MAS varcte .)
    PUNTO_COMA      reduce using rule 94 (factor -> MAS varcte .)
    COMA            reduce using rule 94 (factor -> MAS varcte .)
    PARENTESIS_D    reduce using rule 94 (factor -> MAS varcte .)
    CORCHETE_D      reduce using rule 94 (factor -> MAS varcte .)
    UNTIL           reduce using rule 94 (factor -> MAS varcte .)


state 160

    (95) factor -> MENOS varcte .

    POR             reduce using rule 95 (factor -> MENOS varcte .)
    ENTRE           reduce using rule 95 (factor -> MENOS varcte .)
    MAS             reduce using rule 95 (factor -> MENOS varcte .)
    MENOS           reduce using rule 95 (factor -> MENOS varcte .)
    MAYOR_QUE       reduce using rule 95 (factor -> MENOS varcte .)
    MENOR_QUE       reduce using rule 95 (factor -> MENOS varcte .)
    NO_IGUAL        reduce using rule 95 (factor -> MENOS varcte .)
    PUNTO_COMA      reduce using rule 95 (factor -> MENOS varcte .)
    COMA            reduce using rule 95 (factor -> MENOS varcte .)
    PARENTESIS_D    reduce using rule 95 (factor -> MENOS varcte .)
    CORCHETE_D      reduce using rule 95 (factor -> MENOS varcte .)
    UNTIL           reduce using rule 95 (factor -> MENOS varcte .)


state 161

    (68) escritura -> PRINT PARENTESIS_I j .

    ID              reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    RETURN          reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    READ            reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    PRINT           reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    IF              reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    WHILE           reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    FOR             reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)
    LLAVE_D         reduce using rule 68 (escritura -> PRINT PARENTESIS_I j .)


state 162

    (69) j -> CTESTRING . k
    (71) k -> . COMA j
    (72) k -> . PARENTESIS_D PUNTO_COMA

    COMA            shift and go to state 186
    PARENTESIS_D    shift and go to state 187

    k                              shift and go to state 185

state 163

    (70) j -> expresion . k
    (71) k -> . COMA j
    (72) k -> . PARENTESIS_D PUNTO_COMA

    COMA            shift and go to state 186
    PARENTESIS_D    shift and go to state 187

    k                              shift and go to state 188

state 164

    (73) condicion -> IF PARENTESIS_I expresion . PARENTESIS_D bloque l

    PARENTESIS_D    shift and go to state 189


state 165

    (76) ciclo_while -> WHILE PARENTESIS_I expresion . PARENTESIS_D bloque

    PARENTESIS_D    shift and go to state 190


state 166

    (77) ciclo_for -> FOR variable IGUAL . expresion UNTIL bloque
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 191
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 167

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D . pop_scope funciones_rep
    (45) pop_scope -> .

    FUNC            reduce using rule 45 (pop_scope -> .)
    MAIN            reduce using rule 45 (pop_scope -> .)

    pop_scope                      shift and go to state 192

state 168

    (62) asignacion -> variable IGUAL expresion PUNTO_COMA .

    ID              reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    RETURN          reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    READ            reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    PRINT           reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    IF              reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    WHILE           reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    FOR             reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)
    LLAVE_D         reduce using rule 62 (asignacion -> variable IGUAL expresion PUNTO_COMA .)


state 169

    (63) llamada_void -> ID PARENTESIS_I expresion I . PARENTESIS_D

    PARENTESIS_D    shift and go to state 193


state 170

    (64) I -> COMA . expresion I
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 194
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 171

    (65) I -> vacio .

    PARENTESIS_D    reduce using rule 65 (I -> vacio .)


state 172

    (59) h -> CORCHETE_I expresion CORCHETE_D .

    IGUAL           reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    ID              reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    RETURN          reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    READ            reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    PRINT           reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    IF              reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    WHILE           reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    FOR             reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)
    LLAVE_D         reduce using rule 59 (h -> CORCHETE_I expresion CORCHETE_D .)


state 173

    (60) h -> CORCHETE_I expresion COMA . expresion CORCHETE_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 195
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 174

    (79) m -> MAYOR_QUE exp .

    PUNTO_COMA      reduce using rule 79 (m -> MAYOR_QUE exp .)
    COMA            reduce using rule 79 (m -> MAYOR_QUE exp .)
    PARENTESIS_D    reduce using rule 79 (m -> MAYOR_QUE exp .)
    CORCHETE_D      reduce using rule 79 (m -> MAYOR_QUE exp .)
    UNTIL           reduce using rule 79 (m -> MAYOR_QUE exp .)


state 175

    (80) m -> MENOR_QUE exp .

    PUNTO_COMA      reduce using rule 80 (m -> MENOR_QUE exp .)
    COMA            reduce using rule 80 (m -> MENOR_QUE exp .)
    PARENTESIS_D    reduce using rule 80 (m -> MENOR_QUE exp .)
    CORCHETE_D      reduce using rule 80 (m -> MENOR_QUE exp .)
    UNTIL           reduce using rule 80 (m -> MENOR_QUE exp .)


state 176

    (81) m -> NO_IGUAL exp .

    PUNTO_COMA      reduce using rule 81 (m -> NO_IGUAL exp .)
    COMA            reduce using rule 81 (m -> NO_IGUAL exp .)
    PARENTESIS_D    reduce using rule 81 (m -> NO_IGUAL exp .)
    CORCHETE_D      reduce using rule 81 (m -> NO_IGUAL exp .)
    UNTIL           reduce using rule 81 (m -> NO_IGUAL exp .)


state 177

    (84) n -> MAS exp .

    MAYOR_QUE       reduce using rule 84 (n -> MAS exp .)
    MENOR_QUE       reduce using rule 84 (n -> MAS exp .)
    NO_IGUAL        reduce using rule 84 (n -> MAS exp .)
    PUNTO_COMA      reduce using rule 84 (n -> MAS exp .)
    COMA            reduce using rule 84 (n -> MAS exp .)
    PARENTESIS_D    reduce using rule 84 (n -> MAS exp .)
    CORCHETE_D      reduce using rule 84 (n -> MAS exp .)
    UNTIL           reduce using rule 84 (n -> MAS exp .)


state 178

    (85) n -> MENOS exp .

    MAYOR_QUE       reduce using rule 85 (n -> MENOS exp .)
    MENOR_QUE       reduce using rule 85 (n -> MENOS exp .)
    NO_IGUAL        reduce using rule 85 (n -> MENOS exp .)
    PUNTO_COMA      reduce using rule 85 (n -> MENOS exp .)
    COMA            reduce using rule 85 (n -> MENOS exp .)
    PARENTESIS_D    reduce using rule 85 (n -> MENOS exp .)
    CORCHETE_D      reduce using rule 85 (n -> MENOS exp .)
    UNTIL           reduce using rule 85 (n -> MENOS exp .)


state 179

    (88) o -> POR termino .

    MAS             reduce using rule 88 (o -> POR termino .)
    MENOS           reduce using rule 88 (o -> POR termino .)
    MAYOR_QUE       reduce using rule 88 (o -> POR termino .)
    MENOR_QUE       reduce using rule 88 (o -> POR termino .)
    NO_IGUAL        reduce using rule 88 (o -> POR termino .)
    PUNTO_COMA      reduce using rule 88 (o -> POR termino .)
    COMA            reduce using rule 88 (o -> POR termino .)
    PARENTESIS_D    reduce using rule 88 (o -> POR termino .)
    CORCHETE_D      reduce using rule 88 (o -> POR termino .)
    UNTIL           reduce using rule 88 (o -> POR termino .)


state 180

    (89) o -> ENTRE termino .

    MAS             reduce using rule 89 (o -> ENTRE termino .)
    MENOS           reduce using rule 89 (o -> ENTRE termino .)
    MAYOR_QUE       reduce using rule 89 (o -> ENTRE termino .)
    MENOR_QUE       reduce using rule 89 (o -> ENTRE termino .)
    NO_IGUAL        reduce using rule 89 (o -> ENTRE termino .)
    PUNTO_COMA      reduce using rule 89 (o -> ENTRE termino .)
    COMA            reduce using rule 89 (o -> ENTRE termino .)
    PARENTESIS_D    reduce using rule 89 (o -> ENTRE termino .)
    CORCHETE_D      reduce using rule 89 (o -> ENTRE termino .)
    UNTIL           reduce using rule 89 (o -> ENTRE termino .)


state 181

    (96) p -> CORCHETE_I expresion . CORCHETE_D
    (97) p -> CORCHETE_I expresion . COMA expresion CORCHETE_D

    CORCHETE_D      shift and go to state 196
    COMA            shift and go to state 197


state 182

    (98) p -> PARENTESIS_I expresion . q PARENTESIS_D
    (102) q -> . COMA expresion q
    (103) q -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 199
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    q                              shift and go to state 198
    vacio                          shift and go to state 200

state 183

    (99) p -> PUNTO ID .
    (100) p -> PUNTO ID . PARENTESIS_I r PARENTESIS_D

    POR             reduce using rule 99 (p -> PUNTO ID .)
    ENTRE           reduce using rule 99 (p -> PUNTO ID .)
    MAS             reduce using rule 99 (p -> PUNTO ID .)
    MENOS           reduce using rule 99 (p -> PUNTO ID .)
    MAYOR_QUE       reduce using rule 99 (p -> PUNTO ID .)
    MENOR_QUE       reduce using rule 99 (p -> PUNTO ID .)
    NO_IGUAL        reduce using rule 99 (p -> PUNTO ID .)
    PUNTO_COMA      reduce using rule 99 (p -> PUNTO ID .)
    COMA            reduce using rule 99 (p -> PUNTO ID .)
    PARENTESIS_D    reduce using rule 99 (p -> PUNTO ID .)
    CORCHETE_D      reduce using rule 99 (p -> PUNTO ID .)
    UNTIL           reduce using rule 99 (p -> PUNTO ID .)
    PARENTESIS_I    shift and go to state 201


state 184

    (93) factor -> PARENTESIS_I expresion PARENTESIS_D .

    POR             reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    ENTRE           reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MAS             reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MENOS           reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    MENOR_QUE       reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    NO_IGUAL        reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    COMA            reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    CORCHETE_D      reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)
    UNTIL           reduce using rule 93 (factor -> PARENTESIS_I expresion PARENTESIS_D .)


state 185

    (69) j -> CTESTRING k .

    ID              reduce using rule 69 (j -> CTESTRING k .)
    RETURN          reduce using rule 69 (j -> CTESTRING k .)
    READ            reduce using rule 69 (j -> CTESTRING k .)
    PRINT           reduce using rule 69 (j -> CTESTRING k .)
    IF              reduce using rule 69 (j -> CTESTRING k .)
    WHILE           reduce using rule 69 (j -> CTESTRING k .)
    FOR             reduce using rule 69 (j -> CTESTRING k .)
    LLAVE_D         reduce using rule 69 (j -> CTESTRING k .)


state 186

    (71) k -> COMA . j
    (69) j -> . CTESTRING k
    (70) j -> . expresion k
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    CTESTRING       shift and go to state 162
    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    j                              shift and go to state 202
    expresion                      shift and go to state 163
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 187

    (72) k -> PARENTESIS_D . PUNTO_COMA

    PUNTO_COMA      shift and go to state 203


state 188

    (70) j -> expresion k .

    ID              reduce using rule 70 (j -> expresion k .)
    RETURN          reduce using rule 70 (j -> expresion k .)
    READ            reduce using rule 70 (j -> expresion k .)
    PRINT           reduce using rule 70 (j -> expresion k .)
    IF              reduce using rule 70 (j -> expresion k .)
    WHILE           reduce using rule 70 (j -> expresion k .)
    FOR             reduce using rule 70 (j -> expresion k .)
    LLAVE_D         reduce using rule 70 (j -> expresion k .)


state 189

    (73) condicion -> IF PARENTESIS_I expresion PARENTESIS_D . bloque l
    (6) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 72

    bloque                         shift and go to state 204

state 190

    (76) ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D . bloque
    (6) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 72

    bloque                         shift and go to state 205

state 191

    (77) ciclo_for -> FOR variable IGUAL expresion . UNTIL bloque

    UNTIL           shift and go to state 206


state 192

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope . funciones_rep
    (43) funciones_rep -> . funciones funciones2
    (44) funciones_rep -> . vacio
    (39) funciones -> . FUNC funciones_tipo ID
    (1) vacio -> .

    FUNC            shift and go to state 18
    MAIN            reduce using rule 1 (vacio -> .)

    funciones_rep                  shift and go to state 207
    funciones                      shift and go to state 208
    vacio                          shift and go to state 209

state 193

    (63) llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .

    ID              reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    RETURN          reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    READ            reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    PRINT           reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    IF              reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    WHILE           reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    FOR             reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)
    LLAVE_D         reduce using rule 63 (llamada_void -> ID PARENTESIS_I expresion I PARENTESIS_D .)


state 194

    (64) I -> COMA expresion . I
    (64) I -> . COMA expresion I
    (65) I -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 170
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    I                              shift and go to state 210
    vacio                          shift and go to state 171

state 195

    (60) h -> CORCHETE_I expresion COMA expresion . CORCHETE_D

    CORCHETE_D      shift and go to state 211


state 196

    (96) p -> CORCHETE_I expresion CORCHETE_D .

    POR             reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    ENTRE           reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    MAS             reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    MENOS           reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    MAYOR_QUE       reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    MENOR_QUE       reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    NO_IGUAL        reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    PUNTO_COMA      reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    COMA            reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    PARENTESIS_D    reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    CORCHETE_D      reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)
    UNTIL           reduce using rule 96 (p -> CORCHETE_I expresion CORCHETE_D .)


state 197

    (97) p -> CORCHETE_I expresion COMA . expresion CORCHETE_D
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 212
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 198

    (98) p -> PARENTESIS_I expresion q . PARENTESIS_D

    PARENTESIS_D    shift and go to state 213


state 199

    (102) q -> COMA . expresion q
    (78) expresion -> . exp m
    (83) exp -> . termino n
    (87) termino -> . factor o
    (91) factor -> . varcte
    (92) factor -> . ID p
    (93) factor -> . PARENTESIS_I expresion PARENTESIS_D
    (94) factor -> . MAS varcte
    (95) factor -> . MENOS varcte
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    ID              shift and go to state 120
    PARENTESIS_I    shift and go to state 121
    MAS             shift and go to state 122
    MENOS           shift and go to state 123
    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    expresion                      shift and go to state 214
    exp                            shift and go to state 116
    termino                        shift and go to state 117
    factor                         shift and go to state 118
    varcte                         shift and go to state 119

state 200

    (103) q -> vacio .

    PARENTESIS_D    reduce using rule 103 (q -> vacio .)


state 201

    (100) p -> PUNTO ID PARENTESIS_I . r PARENTESIS_D
    (104) r -> . varcte s
    (105) r -> . vacio
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT
    (1) vacio -> .

    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    r                              shift and go to state 215
    varcte                         shift and go to state 216
    vacio                          shift and go to state 217

state 202

    (71) k -> COMA j .

    ID              reduce using rule 71 (k -> COMA j .)
    RETURN          reduce using rule 71 (k -> COMA j .)
    READ            reduce using rule 71 (k -> COMA j .)
    PRINT           reduce using rule 71 (k -> COMA j .)
    IF              reduce using rule 71 (k -> COMA j .)
    WHILE           reduce using rule 71 (k -> COMA j .)
    FOR             reduce using rule 71 (k -> COMA j .)
    LLAVE_D         reduce using rule 71 (k -> COMA j .)


state 203

    (72) k -> PARENTESIS_D PUNTO_COMA .

    ID              reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    RETURN          reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    READ            reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    PRINT           reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    IF              reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    WHILE           reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    FOR             reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)
    LLAVE_D         reduce using rule 72 (k -> PARENTESIS_D PUNTO_COMA .)


state 204

    (73) condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque . l
    (74) l -> . ELSE bloque
    (75) l -> . vacio
    (1) vacio -> .

    ELSE            shift and go to state 219
    ID              reduce using rule 1 (vacio -> .)
    RETURN          reduce using rule 1 (vacio -> .)
    READ            reduce using rule 1 (vacio -> .)
    PRINT           reduce using rule 1 (vacio -> .)
    IF              reduce using rule 1 (vacio -> .)
    WHILE           reduce using rule 1 (vacio -> .)
    FOR             reduce using rule 1 (vacio -> .)
    LLAVE_D         reduce using rule 1 (vacio -> .)

    l                              shift and go to state 218
    vacio                          shift and go to state 220

state 205

    (76) ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .

    ID              reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    RETURN          reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    READ            reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    PRINT           reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    IF              reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    WHILE           reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    FOR             reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)
    LLAVE_D         reduce using rule 76 (ciclo_while -> WHILE PARENTESIS_I expresion PARENTESIS_D bloque .)


state 206

    (77) ciclo_for -> FOR variable IGUAL expresion UNTIL . bloque
    (6) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 72

    bloque                         shift and go to state 221

state 207

    (42) funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep .

    MAIN            reduce using rule 42 (funciones2 -> PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep .)


state 208

    (43) funciones_rep -> funciones . funciones2
    (42) funciones2 -> . PARENTESIS_I param PARENTESIS_D LLAVE_I declaracion_variables estatutos LLAVE_D pop_scope funciones_rep

    PARENTESIS_I    shift and go to state 34

    funciones2                     shift and go to state 222

state 209

    (44) funciones_rep -> vacio .

    MAIN            reduce using rule 44 (funciones_rep -> vacio .)


state 210

    (64) I -> COMA expresion I .

    PARENTESIS_D    reduce using rule 64 (I -> COMA expresion I .)


state 211

    (60) h -> CORCHETE_I expresion COMA expresion CORCHETE_D .

    IGUAL           reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    ID              reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    RETURN          reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    READ            reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PRINT           reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    IF              reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    WHILE           reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    FOR             reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    LLAVE_D         reduce using rule 60 (h -> CORCHETE_I expresion COMA expresion CORCHETE_D .)


state 212

    (97) p -> CORCHETE_I expresion COMA expresion . CORCHETE_D

    CORCHETE_D      shift and go to state 223


state 213

    (98) p -> PARENTESIS_I expresion q PARENTESIS_D .

    POR             reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    ENTRE           reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MAS             reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MENOS           reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    MENOR_QUE       reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    NO_IGUAL        reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    COMA            reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    CORCHETE_D      reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)
    UNTIL           reduce using rule 98 (p -> PARENTESIS_I expresion q PARENTESIS_D .)


state 214

    (102) q -> COMA expresion . q
    (102) q -> . COMA expresion q
    (103) q -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 199
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    q                              shift and go to state 224
    vacio                          shift and go to state 200

state 215

    (100) p -> PUNTO ID PARENTESIS_I r . PARENTESIS_D

    PARENTESIS_D    shift and go to state 225


state 216

    (104) r -> varcte . s
    (106) s -> . COMA varcte s
    (107) s -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 227
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    s                              shift and go to state 226
    vacio                          shift and go to state 228

state 217

    (105) r -> vacio .

    PARENTESIS_D    reduce using rule 105 (r -> vacio .)


state 218

    (73) condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .

    ID              reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    RETURN          reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    READ            reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    PRINT           reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    IF              reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    WHILE           reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    FOR             reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)
    LLAVE_D         reduce using rule 73 (condicion -> IF PARENTESIS_I expresion PARENTESIS_D bloque l .)


state 219

    (74) l -> ELSE . bloque
    (6) bloque -> . LLAVE_I estatutos LLAVE_D

    LLAVE_I         shift and go to state 72

    bloque                         shift and go to state 229

state 220

    (75) l -> vacio .

    ID              reduce using rule 75 (l -> vacio .)
    RETURN          reduce using rule 75 (l -> vacio .)
    READ            reduce using rule 75 (l -> vacio .)
    PRINT           reduce using rule 75 (l -> vacio .)
    IF              reduce using rule 75 (l -> vacio .)
    WHILE           reduce using rule 75 (l -> vacio .)
    FOR             reduce using rule 75 (l -> vacio .)
    LLAVE_D         reduce using rule 75 (l -> vacio .)


state 221

    (77) ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .

    ID              reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    RETURN          reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    READ            reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    PRINT           reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    IF              reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    WHILE           reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    FOR             reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)
    LLAVE_D         reduce using rule 77 (ciclo_for -> FOR variable IGUAL expresion UNTIL bloque .)


state 222

    (43) funciones_rep -> funciones funciones2 .

    MAIN            reduce using rule 43 (funciones_rep -> funciones funciones2 .)


state 223

    (97) p -> CORCHETE_I expresion COMA expresion CORCHETE_D .

    POR             reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    ENTRE           reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MAS             reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MENOS           reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MAYOR_QUE       reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    MENOR_QUE       reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    NO_IGUAL        reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PUNTO_COMA      reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    COMA            reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    PARENTESIS_D    reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    CORCHETE_D      reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)
    UNTIL           reduce using rule 97 (p -> CORCHETE_I expresion COMA expresion CORCHETE_D .)


state 224

    (102) q -> COMA expresion q .

    PARENTESIS_D    reduce using rule 102 (q -> COMA expresion q .)


state 225

    (100) p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .

    POR             reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    ENTRE           reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MAS             reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MENOS           reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MAYOR_QUE       reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    MENOR_QUE       reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    NO_IGUAL        reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    PUNTO_COMA      reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    COMA            reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    PARENTESIS_D    reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    CORCHETE_D      reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)
    UNTIL           reduce using rule 100 (p -> PUNTO ID PARENTESIS_I r PARENTESIS_D .)


state 226

    (104) r -> varcte s .

    PARENTESIS_D    reduce using rule 104 (r -> varcte s .)


state 227

    (106) s -> COMA . varcte s
    (108) varcte -> . CTECHAR
    (109) varcte -> . CTEINT
    (110) varcte -> . CTEFLOAT

    CTECHAR         shift and go to state 124
    CTEINT          shift and go to state 125
    CTEFLOAT        shift and go to state 126

    varcte                         shift and go to state 230

state 228

    (107) s -> vacio .

    PARENTESIS_D    reduce using rule 107 (s -> vacio .)


state 229

    (74) l -> ELSE bloque .

    ID              reduce using rule 74 (l -> ELSE bloque .)
    RETURN          reduce using rule 74 (l -> ELSE bloque .)
    READ            reduce using rule 74 (l -> ELSE bloque .)
    PRINT           reduce using rule 74 (l -> ELSE bloque .)
    IF              reduce using rule 74 (l -> ELSE bloque .)
    WHILE           reduce using rule 74 (l -> ELSE bloque .)
    FOR             reduce using rule 74 (l -> ELSE bloque .)
    LLAVE_D         reduce using rule 74 (l -> ELSE bloque .)


state 230

    (106) s -> COMA varcte . s
    (106) s -> . COMA varcte s
    (107) s -> . vacio
    (1) vacio -> .

    COMA            shift and go to state 227
    PARENTESIS_D    reduce using rule 1 (vacio -> .)

    s                              shift and go to state 231
    vacio                          shift and go to state 228

state 231

    (106) s -> COMA varcte s .

    PARENTESIS_D    reduce using rule 106 (s -> COMA varcte s .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 57 resolved using rule (atributos -> vacio)
WARNING: rejected rule (declaracion_variables -> vacio) in state 57
WARNING: reduce/reduce conflict in state 107 resolved using rule (clases -> vacio)
WARNING: rejected rule (nueva_clase -> vacio) in state 107
WARNING: Rule (nueva_clase -> vacio) is never reduced
